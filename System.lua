do return(function(C2,W2,x2,L2,c2,a2,s2,K2,g2,Y2,N2,T2,f2,u2,w2,du,G2,A2,V2,t2,Q2,y2,E2,U2,k2,b2,m2,n2,Ou,j2,eu,i2,h2,B2,Z2,v2,P2,F2,z2,o2,S2,r2,H2,Iu,R2,I,...)local d,f=nil,(nil);for oj=0,1 do if oj==0X00 then d=C2;else f="LPH}end;end;local M=Z2.sub;local B,j,H=nil,nil,nil;local l,J=pcall,(j2);local p=H2;local W,lu={7,4,B2},(2);while true do do if not(lu<=0)then if lu~=0x1 then B=m2;lu=1;else j=string.gsub;lu=0X0;end;else do H=table.insert;end;break;end;end;end;local m,g=nil,(nil);for BC=0,1 do if BC==0 then do m=r2;end;else g={[0]={[0]=0x0,0X1,2,0X00003,4,5,6,7,0X008,0X9,10,0x0000b,12,0X000D,14,15},{[0X000]=0X1,0x00,3,0X02,5,4,0X007,0X06,0X09,0x08,0XB,10,13,0xc,15,0Xe},{[0x0]=2,3,A2,0X1,0X6,0X0007,0X004,0X5,0Xa,0XB,8,0X9,14,0XF,V2,0X0D},{[A2]=0X3,2,1,0X0,0x7,6,5,0X00004,U2,0XA,a2,0X8,0Xf,14,13,0x00c},{[0X00000]=4,0x5,0X6,0X7,0,0X1,P2,3,0X0c,0Xd,14,L2,8,9,0xa,0XB},{[0]=0X5,0X4,7,0X6,1,0,0X003,0X002,t2,0XC,15,14,0x9,0X008,11,10},{[0]=6,7,4,0X5,2,0X0003,0x00,1,0X0000E,15,0XC,13,0X0000A,0XB,0X00008,0x00009},{[A2]=7,0x6,0X5,0X004,3,0X2,0X01,0,0x0000F,14,0X0000d,12,U2,0x000A,9,0X08},{[0]=w2,a2,10,0X00b,0X00c,t2,0X0000e,0x00F,0,1,2,0x3,4,0X5,f2,0x7},{[0]=9,0X00008,0xB,0x0a,0XD,12,0X00F,14,0X001,0,3,0X2,0X5,0X004,7,6},{[0]=10,0XB,0X8,0X00009,0X0e,0X00F,0Xc,0x0000d,2,0x0003,0,1,0X6,v2,0X4,5},{[A2]=0X0000B,10,0x00009,0X8,15,0Xe,0X00d,12,0X3,2,1,0,0X7,6,5,0x4},{[0]=0Xc,0xd,14,15,0X8,9,10,U2,4,0X5,0x6,7,0,1,0X2,3},{[A2]=13,12,15,14,9,0X8,0X000b,10,0X5,4,7,0X6,0X0001,A2,0x3,0X2},{[0]=0XE,15,12,0xd,10,11,8,a2,0x6,7,4,0X05,2,0X003,0,0X1},{[0]=0XF,14,13,0x0C,0x0B,10,0X9,8,7,0X00006,0x5,G2,0X03,0x02,1,0}};end;end;local A=(next);local D=k2;local l2=function(...)return d(h2,...),{...};end;do lu=2;end;local C,E=nil,nil;while lu<3 do do if lu<=0 then do E=4294967296;end;do lu=1;end;elseif lu~=0X1 then C=Z2.rep;do lu=0X0;end;else lu=3;end;end;end;local V=E2;local L=getfenv;local t=(L and L()or u2);local i=(E-0X1);lu=0X1;local U,O,q,J2,Z,w,v=nil,nil,nil,nil,nil,nil,(nil);do while lu~=0X08 do if lu<=0X3 then if lu<=0X001 then if lu~=0X0 then U=i2.yield;lu=5;else q=K2;lu=3;end;else do if lu~=2 then do J2=1;end;lu=4;else w=1;lu=7;end;end;end;else do if lu<=5 then do if lu~=0x4 then O=s2;lu=0X6;else Z=N2;lu=0x02;end;end;elseif lu==0X6 then lu=0X0;else lu=0X8;end;end;end;end;end;do lu=0X0004;end;local e,G,h,u,k,K,s,N,z,F=nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);while lu<=11 do if not(lu<=5)then if lu<=8 then if lu<=0X6 then h=0x80000000;lu=7;else if lu~=0X7 then do s=h-0X0001;end;lu=2;else u=2^0X34;do lu=0;end;end;end;else if lu<=9 then K={[0]=0x0001};lu=8;else if lu~=10 then G=function()local fl=(q(f,w,w));w=w+1;return fl;end;do lu=0X6;end;else F=function()local qm=k();local Sm=(k());local Um,lm=1,(2);local sm,Em,Am=nil,nil,nil;do repeat do if not(lm<=1)then if lm==2 then do if qm==0 and Sm==A2 then return 0X0;end;end;lm=0;else do Em=N(Sm,20,11);end;lm=1;end;else if lm==0x00000 then sm=(-1)^N(Sm,g2,1);lm=3;else Am=N(Sm,0,20)*E+qm;do lm=4;end;end;end;end;until lm>3;end;lm=1;while(true)do do if lm~=0 then if Em==0X0 then if Am==0X0 then return sm*0X00000;else Em=0X0001;do Um=0;end;end;elseif Em~=2047 then else if Am==0X0 then return sm*(0X0/0X0);else return sm*(1/0X0);end;end;lm=0x0;else return sm*(2^(Em-0X3ff))*(Am/u+Um);end;end;end;end;lu=12;end;end;end;else if not(lu<=0X0002)then if lu<=3 then N=function(NP,VP,SP)local PP=((NP/K[VP])%K[SP]);for C0=0,0x1 do if C0~=0X0 then return PP;else PP=PP-PP%1;end;end;end;lu=0x5;else if lu~=4 then z=function()local xT,rT=k(),(k());do if rT>=h then rT=rT-E;end;end;return rT*E+xT;end;lu=0X0000A;else do e=z2;end;lu=1;end;end;else if lu<=0 then k=function()local O1,W1,z1,r1=q(f,w,w+3);local I1=(1);repeat if I1~=0x0 then w=w+0X4;I1=0;else return r1*16777216+z1*65536+W1*F2+O1;end;until(false);end;lu=0X9;else do if lu~=1 then do local gv=(nil);local lv=1;while lv<0X2 do if lv~=0 then gv=2;lv=0;else for oJ=n2,0X1F do local tJ=0X1;do while tJ<=0X001 do if tJ==0X0 then do gv=gv*0X2;end;tJ=2;else(K)[oJ]=gv;tJ=0;end;end;end;end;do lv=2;end;end;end;end;lu=0x03;else f=j(M(f,0X5),'\046.',function(A4)do if q(A4,P2)==0X00048 then v=O(M(A4,0X1,n2));return'';else local Sb=(p(O(A4,0X10)));if v then local yE=nil;local ZE=(0x2);while(true)do if ZE<=0 then return yE;else if ZE==1 then v=nil;ZE=0;else yE=C(Sb,v);ZE=1;end;end;end;else return Sb;end;end;end;end);lu=11;end;end;end;end;end;end;local x=(bit or x2);local R=x and x.bxor or function(yQ,TQ)local JQ=(0X1);while''do if JQ==0 then TQ=TQ%E;break;else yQ=yQ%E;JQ=0x00;end;end;local sQ=0;local FQ=(1);while yQ>0 and TQ>0 do local Ji,Xi=yQ%16,TQ%0X000010;for Wu=0X0,0X1 do do if Wu==0 then sQ=sQ+g[Ji][Xi]*FQ;else yQ=(yQ-Ji)/0x10;end;end;end;local ti=0x0;do while 0.7578693808465086 do if ti==0X0 then do TQ=(TQ-Xi)/16;end;ti=0X0001;else do FQ=FQ*16;end;do break;end;end;end;end;end;do return sQ+yQ*FQ+TQ*FQ;end;end;local b=(x and x[R2]or function(sE,nE)local IE=(1);while 0.7554051676177427 do do if not(IE<=0x0)then if IE==1 then do sE=sE%E;end;IE=0x0;else do return((sE+nE)-R(sE,nE))/2;end;end;else nE=nE%E;IE=2;end;end;end;end);local r=(b2);local c=(x and x.bor or function(ts,Ss)local Rs=0X00002;do repeat do if Rs<=0X0 then do return i-b(i-ts,i-Ss);end;elseif Rs==0X1 then Ss=Ss%E;Rs=0;else do ts=ts%E;end;Rs=0X001;end;end;until(false);end;end);local y=x and x.lshift;local T=x and x[c2]or function(bh)return i-(bh%E);end;lu=3;local a,Y,o,Q,S=nil,nil,nil,nil,nil;while true do if not(lu<=0X2)then if lu<=0X4 then if lu==0X3 then do a=T2 or y2.unpack;end;do lu=4;end;else Y=x and x[Y2];lu=6;end;else if lu==0X0005 then o=function()local kJ=0X000;local oJ=(0x0000);while true do local r1=(q(f,w,w));w=w+0X0001;do kJ=c(kJ,y(b(r1,0X7F),oJ));end;do if b(r1,0X000080)==0X0 then return kJ;end;end;oJ=oJ+0X00007;end;end;lu=0x0001;else y=y or function(fq,Zq)if Zq>=32 then return 0X0000;end;if not(Zq<0)then else return Y(fq,-Zq);end;return(fq*K[Zq])%E;end;lu=0;end;end;else if not(lu<=0x0)then if lu==1 then Q={[0X8]=0X1,[4]=1,[P2]=0X01,[0X007]=W2,[0X6]=6,[8]=2,[0]=0X0008,[0X5]=f2};do lu=0X2;end;else S=function()local AM=o();do if not(AM>s)then else return AM-E;end;end;return AM;end;break;end;else do Y=Y or function(z0,Y0)local B0=(0x0000);while B0~=0X2 do if B0~=0 then if not(Y0<0)then else return y(z0,-Y0);end;do B0=0X0002;end;else if Y0>=32 then return 0X0;end;do B0=0X00001;end;end;end;do B0=0X1;end;local p0=(nil);repeat if B0==0 then return p0-p0%0x1;else p0=(z0%E/K[Y0]);B0=0X0;end;until(false);end;end;lu=5;end;end;end;local P=setfenv;local I2=(G());local e2=(G());do lu=0X00000;end;local d2,X=nil,(nil);repeat if lu==0 then d2=function(Ri)local Ti,Yi,xi,Vi,Wi,Bi=5,nil,nil,nil,nil,(nil);do while true do do if not(Ti<=3)then if not(Ti<=5)then if Ti~=6 then e2=(13*e2+Ri)%0X100;Ti=2;else return Bi*Q2+Wi*0X10000+Vi*256+xi;end;else do if Ti==0x004 then Bi=R(Yi[4],e2);Ti=0X07;else do Yi={q(f,w,w+3)};end;Ti=0X0000;end;end;end;else do if not(Ti<=0X01)then do if Ti~=2 then Vi=R(Yi[P2],e2);do Ti=1;end;else w=w+0X4;Ti=0X6;end;end;else if Ti~=0X0 then Wi=R(Yi[W2],e2);Ti=4;else do xi=R(Yi[1],e2);end;do Ti=0X3;end;end;end;end;end;end;end;end;end;lu=1;else X=o2;lu=2;end;until lu>0X01;lu=9;local O2,X2,D2,M2,q2,p2=nil,nil,nil,nil,nil,nil;while-1302118913 do if lu<=4 then if lu<=0X1 then if lu==0 then function M2(oE,QE,eE)local SE=(eE[0x08]);local jE,xE,IE,aE=eE[0X2],eE[6],eE[0x5],eE[0X009];local zE,dE,LE=eE[1],eE[4],(eE[7]);local NE=(B({},{__mode="v"}));local DE=(nil);DE=function(...)local Wb,Hb=1,({});local Qb=((L and L()or _ENV));local Ob={[0X2]=Hb,[1]=eE};local Kb,Sb=l2(...);Kb=Kb-1;for NR=0X000,Kb do if IE>NR then(Hb)[NR]=Sb[NR+0X1];else break;end;end;local Mb=(0);local ub=((Qb==t and oE or Qb));if not dE then do Sb=nil;end;else if LE then Hb[IE]={n=Kb>=IE and Kb-IE+0x01 or 0,a(Sb,IE+0X001,Kb+1)};end;end;if ub~=Qb then if not(P)then _ENV=ub;else(P)(DE,ub);end;end;local hb,qb,rb,Pb=l(function()repeat local pN=(jE[Wb]);local ZN=pN[0X2];do Wb=Wb+1;end;do if not(ZN<46)then do if ZN>=0X00045 then if not(ZN<0X50)then do if not(ZN<86)then do if ZN>=89 then do if not(ZN>=90)then do Hb[pN[5]][Hb[pN[0X4]]]=Hb[pN[7]];end;else if ZN~=0X5b then local yR=(pN[0X4]);local JR=(Hb[yR]);for CQ=yR+0X0001,pN[7]do JR=JR..Hb[CQ];end;(Hb)[pN[0X5]]=JR;else local Tu,yu=pN[5],Hb[pN[4]];Hb[Tu+1]=yu;Hb[Tu]=yu[pN[0x3]];end;end;end;else if ZN<0X57 then(Hb)[pN[5]]=nil;else if ZN==0X58 then Hb[pN[5]]=c(Hb[pN[0X4]],Hb[pN[7]]);else Hb[pN[5]]=Hb[pN[0X04]]~=pN[3];end;end;end;end;else if ZN<83 then if ZN>=81 then if ZN==0X52 then local cA=(Hb[pN[4]]/Hb[pN[7]]);(Hb)[pN[0X0005]]=cA-cA%0x01;else local Nu=pN[0X00005];local bu=V(function(...)(U)();for jI,fI in...do U(true,jI,fI);end;end);(bu)(Hb[Nu],Hb[Nu+0X0001],Hb[Nu+0x2]);do Mb=Nu;end;do(Hb)[Nu]=bu;end;Wb=pN[0X4];end;else local YO=pN[0X05];local gO,ZO,hO=Hb[YO]();do if gO then do(Hb)[YO+1]=ZO;end;(Hb)[YO+2]=hO;Wb=pN[0X4];end;end;end;else do if not(ZN<0X0054)then if ZN~=85 then local MS=QE[pN[0x0004]];MS[0X1][MS[0X2]]=Hb[pN[0X0005]];else if pN[0X007]==182 then Wb=Wb-1;(jE)[Wb]={[5]=(pN[0X0005]-0X76),[2]=47,[0X4]=(pN[0X4]-118)};else repeat local Qe,Ge,Me=NE,Hb,(pN[0X5]);if not(#Qe>0X0)then else local xC={};do for er,Tr in A,Qe do for LH,fH in A,Tr do do if not(fH[1]==Ge and fH[2]>=Me)then else local aw=(fH[2]);do if not(not xC[aw])then else(xC)[aw]={Ge[aw]};end;end;(fH)[0x01]=xC[aw];fH[0X002]=1;end;end;end;end;end;end;until true;end;end;else Mb=pN[5];(Hb)[Mb]=Hb[Mb]();end;end;end;end;end;else if not(ZN<0x4a)then do if not(ZN<77)then if not(ZN>=0X04e)then Hb[pN[0X5]]=y(Hb[pN[4]],Hb[pN[7]]);else if ZN~=79 then repeat local KC,BC=NE,(Hb);if not(#KC>0)then else local wk={};for Yh,vh in A,KC do for ay,yy in A,vh do do if yy[1]==BC and yy[2]>=0X0000 then local yX=yy[0x02];if not wk[yX]then wk[yX]={BC[yX]};end;do(yy)[1]=wk[yX];end;yy[0X0002]=1;end;end;end;end;end;until true;return;else(Hb)[pN[0x5]]=R(Hb[pN[0X4]],Hb[pN[7]]);end;end;else do if ZN>=0X4B then if ZN~=0X4c then if pN[0X00007]~=0X4C then repeat local h3,u3=NE,Hb;if#h3>0 then local tH={};for LY,rY in A,h3 do for t8,Q8 in A,rY do do if Q8[0X0001]==u3 and Q8[0X2]>=0 then local sR=(Q8[2]);if not tH[sR]then(tH)[sR]={u3[sR]};end;do Q8[0x1]=tH[sR];end;(Q8)[0X2]=1;end;end;end;end;end;until true;local Nz=pN[0X5];return false,Nz,Nz+pN[0X00004]-2;else Wb=Wb-1;jE[Wb]={[2]=11,[0X00005]=(pN[0X5]-140),[0X4]=(pN[4]-140)};end;else do Hb[pN[0X005]]=Hb[pN[0x4]]>Hb[pN[7]];end;end;else do(Hb)[pN[0X5]]=Hb[pN[0X004]]~=Hb[pN[7]];end;end;end;end;end;else if not(ZN<71)then if ZN>=72 then if ZN==0x49 then Hb[pN[5]]=Hb[pN[0x004]]<=Hb[pN[0X07]];else local Zj=(pN[5]);local Lj,uj=Hb[Zj]();if Lj then Wb=pN[4];(Hb)[Zj+0X003]=uj;end;end;else local S9,W9=pN[0X0005],(pN[7]-1)*50;local f9=(Hb[S9]);for ab=1,Mb-S9 do(f9)[W9+ab]=Hb[S9+ab];end;end;else do if ZN==0X46 then Hb[pN[0X005]]=not Hb[pN[0X4]];else local W4=pN[5];local Y4,x4=Hb[W4]();if not(Y4)then else do Hb[W4+1]=x4;end;Wb=pN[0x4];end;end;end;end;end;end;else if not(ZN>=57)then do if ZN<0X33 then do if not(ZN>=48)then if ZN==0x002F then repeat local Z4,s4=NE,(Hb);if not(#Z4>0x0)then else local gb=({});for Zp,Jp in A,Z4 do for f0,o0 in A,Jp do if o0[1]==s4 and o0[2]>=0 then local G4=o0[2];if not gb[G4]then do(gb)[G4]={s4[G4]};end;end;o0[0X0001]=gb[G4];(o0)[2]=1;end;end;end;end;until true;return false,pN[5],Mb;else do Hb[pN[0X005]]=Hb[pN[4]]==Hb[pN[7]];end;end;else if ZN<49 then local lK=pN[5];local IK=V(function(...)(U)();do for A9,g9,N9,K9,e9,M9,p9,d9,L9,Q9 in...do U(true,{A9,g9,N9,K9,e9,M9,p9,d9,L9,Q9});end;end;end);(IK)(Hb[lK],Hb[lK+0x1],Hb[lK+0x2]);do Mb=lK;end;Hb[lK]=IK;Wb=pN[0X004];else if ZN~=50 then do Hb[pN[5]][pN[1]]=pN[0X3];end;else do Wb=pN[0X0004];end;end;end;end;end;else if ZN<0x000036 then if ZN>=0X34 then if ZN~=53 then do Hb[pN[0X5]]=Hb[pN[0x04]]/Hb[pN[0X7]];end;else local MH=(pN[5]);do Hb[MH]=Hb[MH](Hb[MH+1]);end;Mb=MH;end;else do for Ph=pN[0X00005],pN[0x04]do do(Hb)[Ph]=nil;end;end;end;end;else do if ZN<55 then if Hb[pN[0x0004]]~=Hb[pN[0X007]]then Wb=pN[5];end;else if ZN~=0X38 then local m9=(pN[0X5]);Hb[m9]=Hb[m9](Hb[m9+1],Hb[m9+0X02]);do Mb=m9;end;else do(Hb)[pN[5]]=Hb[pN[4]][pN[0X03]];end;end;end;end;end;end;end;else do if ZN>=0X3F then if not(ZN<0X42)then if ZN<0X43 then repeat local tX,ZX=NE,(Hb);if not(#tX>0X0)then else local DQ=({});for iM,eM in A,tX do for Bb,Nb in A,eM do do if Nb[0X001]==ZX and Nb[2]>=0X0 then local gY=(Nb[2]);if not DQ[gY]then DQ[gY]={ZX[gY]};end;(Nb)[0X1]=DQ[gY];do(Nb)[2]=1;end;end;end;end;end;end;until true;do return true,pN[0X00005],0;end;else if ZN~=68 then local pB=pN[5];Mb=pB+pN[4]-0x1;(Hb)[pB]=Hb[pB](a(Hb,pB+0x1,Mb));Mb=pB;else if Hb[pN[0x4]]~=pN[3]then Wb=pN[5];end;end;end;else if ZN<64 then local Wx=(xE[pN[0X04]]);local rx,Zx=Wx[3],(nil);local dx=#rx;if dx>0 then do Zx={};end;for Jh=1,dx do local Uh=(rx[Jh]);do if Uh[0X00001]~=0X0000 then(Zx)[Jh-1]=QE[Uh[2]];else Zx[Jh-0X1]={Hb,Uh[2]};end;end;end;(H)(NE,Zx);end;(Hb)[pN[5]]=M2(ub,Zx,Wx);else do if ZN~=0X41 then if pN[7]~=157 then local iV=pN[0x5];for AU=iV,iV+(pN[0X0004]-1)do(Hb)[AU]=Sb[IE+(AU-iV)+1];end;else do Wb=Wb-0X1;end;jE[Wb]={[0x2]=43,[5]=(pN[0x005]-0Xaa),[0x00004]=(pN[4]-0XaA)};end;else Hb[pN[5]]=Hb[pN[0X4]]+Hb[pN[7]];end;end;end;end;else if ZN>=60 then if ZN<61 then(Hb)[pN[5]]=T(Hb[pN[0X4]]);else if ZN==0X3E then do(Hb)[pN[0x5]]={a({},1,pN[0X0004])};end;else if not(Hb[pN[0X4]]<=pN[0X0003])then do Wb=pN[0X5];end;end;end;end;else if not(ZN<58)then if ZN==59 then if not(not Hb[pN[5]])then else Wb=pN[0X00004];end;else ub[pN[0X0001]]=Hb[pN[0x0005]];end;else if pN[7]==0X97 then Wb=Wb-0X0001;(jE)[Wb]={[0X005]=(pN[0X5]-0XE),[0X02]=0,[4]=(pN[4]-14)};elseif pN[7]~=0x00054 then if not(Hb[pN[0x00005]])then else Wb=pN[0x00004];end;else Wb=Wb-0X1;jE[Wb]={[0X002]=33,[5]=(pN[0X00005]-164),[4]=(pN[0X4]-164)};end;end;end;end;end;end;end;end;else if ZN<23 then if not(ZN>=0XB)then if not(ZN<5)then if not(ZN>=8)then if not(ZN>=6)then(Hb)[pN[5]]=true;else do if ZN~=0X00007 then if pN[0X007]==0X0091 then Wb=Wb-0X1;(jE)[Wb]={[0X2]=0x004e,[0X5]=(pN[0X5]-0X0C2),[4]=(pN[4]-194)};else do(Hb)[pN[0X005]]=Sb[IE+1];end;end;else do if Hb[pN[0X00004]]==Hb[pN[7]]then Wb=pN[0X5];end;end;end;end;end;else if ZN>=0x9 then if ZN~=10 then Hb[pN[0X5]]=Hb[pN[4]]%pN[0x03];else(Hb)[pN[5]]=Hb[pN[4]]>=Hb[pN[7]];end;else if not(Hb[pN[0x4]]<=Hb[pN[7]])then else Wb=pN[5];end;end;end;else if ZN>=2 then if not(ZN>=3)then Hb[pN[0X5]]=pN[0X1];else if ZN==0x004 then local lr=pN[0x005];local ur,yr,Pr=Hb[lr],Hb[lr+1],(Hb[lr+0X2]);Hb[lr]=V(function()for U4=ur,yr,Pr do U(true,U4);end;end);Wb=pN[0X00004];else(Ob)[pN[0X4]]=Hb[pN[0X5]];end;end;else if ZN==1 then if Hb[pN[0x04]]==pN[3]then Wb=pN[5];end;else if pN[0X0007]==176 then Wb=Wb-1;(jE)[Wb]={[0X2]=75,[4]=(pN[4]-29),[5]=(pN[0X005]-0x01D)};else local ox=Kb-IE;local qx=pN[5];if ox<0X00 then ox=-0x0001;end;for Is=qx,qx+ox do do(Hb)[Is]=Sb[IE+(Is-qx)+0x1];end;end;Mb=qx+ox;end;end;end;end;else do if not(ZN<0X11)then do if ZN>=20 then if ZN>=21 then if ZN==22 then local CL=pN[0X05];local FL=(pN[7]-0x001)*0X032;local sL=Hb[CL];for uz=1,pN[0X4]do(sL)[FL+uz]=Hb[CL+uz];end;else do Hb[pN[0x5]]=Hb[pN[4]]%Hb[pN[7]];end;end;else(Hb)[pN[5]]=D2[pN[4]];end;else if not(ZN<18)then if ZN==0x013 then repeat local ui,li=NE,Hb;do if not(#ui>0X00)then else local qm={};do for ut,Mt in A,ui do for mf,lf in A,Mt do if lf[0X1]==li and lf[0X2]>=0X000 then local fw=(lf[0x2]);if not qm[fw]then qm[fw]={li[fw]};end;(lf)[0x00001]=qm[fw];lf[2]=0X0001;end;end;end;end;end;end;until true;return true,pN[0X5],1;else do Mb=pN[5];end;(Hb[Mb])();do Mb=Mb-0X1;end;end;else(Hb)[pN[5]]=pN[1];end;end;end;else if not(ZN<0X0000e)then if not(ZN<0X0000F)then if ZN==0X10 then Hb[pN[0X05]]=Y(Hb[pN[0X04]],Hb[pN[7]]);else Hb[pN[5]]=Hb[pN[0X4]]*Hb[pN[0x7]];end;else do(Hb)[pN[5]]=Ob[pN[4]];end;end;else if ZN>=12 then if ZN~=0Xd then Hb[pN[5]]=ub[pN[1]];else local qF=pN[0X5];do Mb=qF+pN[4]-1;end;(Hb[qF])(a(Hb,qF+0x1,Mb));Mb=qF-0X001;end;else do Hb[pN[0X0005]]=Hb[pN[0x04]];end;end;end;end;end;end;else if ZN<34 then if not(ZN>=28)then if not(ZN>=0X19)then if ZN==0x18 then local he=pN[0X00005];(Hb[he])(a(Hb,he+0X1,Mb));Mb=he-1;else local mo=pN[0X0004];local Co=pN[0X005];Mb=Co+mo-1;do repeat local qv,Zv=NE,Hb;if not(#qv>0)then else local qY={};for fM,hM in A,qv do for Qe,ee in A,hM do do if ee[1]==Zv and ee[2]>=0 then local xM=ee[2];if not(not qY[xM])then else qY[xM]={Zv[xM]};end;(ee)[0X00001]=qY[xM];(ee)[2]=1;end;end;end;end;end;until true;end;return true,Co,mo;end;else if ZN>=26 then if ZN~=27 then local o9=(pN[0X4]);(Hb)[pN[5]]=Hb[o9]..Hb[o9+1];else do Hb[pN[0X5]]={};end;end;else(Hb[pN[5]])[pN[0X1]]=Hb[pN[7]];end;end;else if ZN>=0x00001f then if ZN<32 then local VB=(pN[5]);local DB,oB=pN[4],(pN[7]);if DB~=0 then do Mb=VB+DB-1;end;end;local eB,fB=nil,(nil);do if DB==1 then eB,fB=l2(Hb[VB]());else eB,fB=l2(Hb[VB](a(Hb,VB+0X00001,Mb)));end;end;if oB~=0X00001 then if oB~=0X0 then eB=VB+oB-0X02;do Mb=eB+1;end;else do eB=eB+VB-1;end;Mb=eB;end;local Vz=(0X0);for YU=VB,eB do do Vz=Vz+1;end;Hb[YU]=fB[Vz];end;else Mb=VB-0X001;end;else if ZN==33 then(Hb)[pN[0X5]]=-Hb[pN[4]];else local Jx=(pN[5]);local Qx,yx=Hb[Jx]();if Qx then do for zZ=1,pN[7]do Hb[Jx+zZ]=yx[zZ];end;end;Wb=pN[4];end;end;end;else if ZN>=0X1d then if ZN~=0X0001e then local mi=pN[5];local zi=V(function(...)(U)();for H1 in...do(U)(true,H1);end;end);(zi)(Hb[mi],Hb[mi+1],Hb[mi+0X2]);Mb=mi;Hb[mi]=zi;Wb=pN[4];else do(Hb)[pN[5]]=b(Hb[pN[0x004]],Hb[pN[7]]);end;end;else do if not(Hb[pN[4]]<Hb[pN[7]])then else do Wb=pN[0x05];end;end;end;end;end;end;else if ZN>=40 then if not(ZN<43)then if not(ZN>=44)then(Hb)[pN[0x5]]=#Hb[pN[4]];else if ZN~=0X2D then do Hb[pN[5]]=Hb[pN[0X4]]^Hb[pN[0X7]];end;else local gO=pN[5];Hb[gO](Hb[gO+0X1],Hb[gO+2]);Mb=gO-0x1;end;end;else do if ZN<0X29 then do Hb[pN[5]][Hb[pN[0X004]]]=pN[0x3];end;else if ZN~=42 then Hb[pN[5]]=Hb[pN[0X004]][Hb[pN[7]]];else do(Hb)[pN[5]]=Hb[pN[4]]-Hb[pN[7]];end;end;end;end;end;else if ZN>=0X25 then do if not(ZN>=38)then local Rn=(pN[5]);Hb[Rn]=Hb[Rn](a(Hb,Rn+1,Mb));Mb=Rn;else if ZN==0X27 then local K5=QE[pN[4]];Hb[pN[0x5]]=K5[0X1][K5[2]];else(Hb)[pN[5]]=false;end;end;end;else if not(ZN<0X23)then do if ZN~=0x0024 then Hb[pN[5]]=Hb[pN[0X004]]<Hb[pN[0X00007]];else(D2)[pN[0X4]]=Hb[pN[5]];end;end;else local H5=(pN[0x5]);(Hb[H5])(Hb[H5+0X00001]);Mb=H5-1;end;end;end;end;end;end;end;until false;end);do if not(hb)then if X(qb)=="string"then if Z(qb,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if Z(qb,"^.-:%d+: ")then(D)('Lu\114a\112h Sc\114i\112t\058'..(zE[Wb-0X1]or'\040\105n\116e\114na\108\041')..": "..J(qb),0);else D(qb,0);end;else D(qb,0X000);end;else do if qb then if Pb~=0X1 then do return Hb[rb](a(Hb,rb+0x1,Mb));end;else return Hb[rb]();end;else if rb then return a(Hb,rb,Pb);end;end;end;end;end;end;if not(P)then else P(DE,oE);end;return DE;end;lu=0x1;else function q2()local sa,za=0X1,nil;repeat if sa==0 then do za={};end;sa=0X2;else sa=0;end;until sa==2;sa=0x7;local Na,Ra,Ia,la,Ja,Ya,Ua=nil,nil,nil,nil,nil,nil,(nil);do while sa<=0X00009 do if sa<=0X0004 then if not(sa<=1)then if sa<=0X002 then Ja=G();sa=0X1;else do if sa~=3 then do Na[12]=k();end;sa=0X6;else do la={};end;do sa=2;end;end;end;end;else if sa==0 then for pK=0X0001,Ia do local XK,VK=nil,(nil);for uL=0,3 do do if not(uL<=0X1)then if uL~=2 then if XK==212 then do VK=F()+k();end;elseif XK==211 then do VK=M(O2(Ja),F()+k());end;elseif XK==209 then VK=F();elseif XK==180 then VK=eu;elseif XK==0X003F then do VK=z();end;elseif XK==0X28 then VK=z();elseif XK==du then do VK=M(O2(Ja),G2);end;elseif XK==0X006 then VK=F();elseif XK==0X83 then do VK=false;end;elseif XK==239 then do VK=F();end;elseif XK~=0x060 then else VK=F()+k();end;else do za[pK-0X0001]=Ra;end;end;else if uL==0X0 then XK=G();else VK=Iu;end;end;end;end;local GK=0X0;local oK={VK,{}};while GK<2 do if GK~=0X00000 then do Ra=Ra+1;end;GK=0X00002;else(la)[Ra]=oK;GK=1;end;end;if not(Ya)then else X2[J2]=oK;J2=J2+0X1;end;end;sa=0X005;else Ya=G()~=0;sa=0X0;end;end;else if sa<=0x6 then if sa~=0X005 then Ia=k()-57419;do sa=3;end;else Na[0x5]=o();sa=8;end;else if not(sa<=0X0007)then if sa~=8 then do Ra=1;end;sa=4;else Ua=k()-1292;sa=10;end;else Na={{},{},Iu,nil,nil,{},Iu,nil,Iu};sa=0X9;end;end;end;end;end;local oa=(Na[0X2]);sa=3;local ca,pa=nil,(nil);repeat if sa<=1 then do if sa==0X0 then pa={};sa=0X5;else for bP=0X1,ca do local yP,TP=nil,nil;do for xG=0,0X1 do if xG==0 then yP=k();else do TP=k();end;end;end;end;local tP=k();do for nh=yP,TP do Na[1][nh]=tP;end;end;end;do sa=4;end;end;end;elseif sa<=2 then ca=k();do sa=1;end;else if sa~=3 then Na[0X13]=k();sa=0;else for aa=1,Ua do(oa)[aa]={[0x5]=S(),[3]=G(),[f2]=G(),[7]=S(),[0X02]=o(),[1]=G(),[4]=S()};end;do sa=0x00002;end;end;end;until sa>=5;sa=1;local Da=(nil);while sa<=1 do if sa~=0 then(Na)[14]=G();sa=0x0;else Da=G();sa=2;end;end;Na[4]=N(Da,0X1,0X1)~=0X0;Na[7]=N(Da,0x2,0X00001)~=0;sa=0x3;local qa=nil;repeat if sa<=1 then if sa~=0 then Na[0Xf]=G();do sa=0X0;end;else(Na)[0X3]=pa;do sa=2;end;end;else if sa<=2 then for Q9=0X001,o()do(pa)[Q9]={G(),o()};end;sa=4;elseif sa~=0X3 then qa=k()-22727;sa=0x5;else(Na)[V2]=G();sa=1;end;end;until sa>=5;local wa=(Na[6]);sa=2;while sa<=2 do do if sa<=0 then Na[0x08]=o();sa=0X3;else if sa==1 then Na[0X009]=o();sa=0;else for IE=0x0,qa-1 do do(wa)[IE]=q2();end;end;sa=1;end;end;end;end;sa=1;repeat if sa==0x000 then return Na;else for qp=0x1,Ua do local Zp=Na[0X2][qp];for U3,a3 in Ou(W)do local s3,z3,J3=2,nil,(nil);while s3~=3 do if s3<=0X0 then do J3=Zp[z3];end;do s3=1;end;else if s3~=1 then do z3=Q[a3];end;s3=0;else if J3==0x00001 then local UP,xP,CP=za[Zp[a3]],0,(nil);do repeat if xP==0 then CP=la[UP];xP=0X001;else if CP then local Mu,Au=2,nil;while Mu~=3 do if Mu<=0X0 then Au=CP[2];Mu=0X1;else if Mu~=0X001 then(Zp)[z3]=CP[n2];do Mu=0;end;else Au[#Au+0X0001]={Zp,z3};Mu=3;end;end;end;end;do xP=2;end;end;until xP==0X2;end;elseif J3~=0XC then else Zp[a3]=qp+Zp[a3]+0X001;end;s3=0x3;end;end;end;end;end;do sa=0X0;end;end;until false;end;do lu=0X8;end;end;else if lu<=0X02 then X2=Iu;lu=0x0003;else do if lu~=0X3 then D2={};lu=5;else do return M2(t,Iu,p2)(...);end;end;end;end;end;else do if lu<=0X6 then if lu~=5 then D2[0X00001]=X2;lu=0X2;else lu=0;end;else if not(lu<=0x7)then if lu~=8 then O2=function(jm)local Vm=(k());local fm,tm=3,(nil);while 0.38145780594580536 do if fm<=1 then if fm~=0 then w=w+Vm;fm=0X0;else return tm;end;else if fm==2 then for Hj=n2,Vm,S2 do local Gj,rj,Wj=Hj+0x1F3d-0X1,0,nil;do while rj<=2 do if not(rj<=0)then if rj~=1 then Wj={q(f,w+Hj-1,w+Gj-1)};do rj=1;end;else for a6=0X1,#Wj do do for Ye=0,1 do do if Ye==0X00 then Wj[a6]=R(Wj[a6],I2);else I2=(jm*I2+209)%256;end;end;end;end;end;rj=0X03;end;else if Gj>Vm then do Gj=Vm;end;end;rj=0x02;end;end;end;tm=tm..p(a(Wj));end;do fm=0X00001;end;else tm="";do fm=2;end;end;end;end;end;lu=0x07;else p2=q2();lu=0X0006;end;else X2={};lu=0X4;end;end;end;end;end;end)(select,3,bit32,0x0000f,"\098no\116",9,tonumber,string.byte,0X1F,"rshift",string.match,unpack,0X6,_ENV,8,173,4,0,12,13,16777216,table,coroutine.wrap,0x0000b,error,rawset,setmetatable,1,ipairs,tostring,true,coroutine,"#",0x5,string,0X7,0X2,0X0100,assert,type,7997,rawget,string.char,nil,'b\097n\100',{0X81FC,3060181498,0X4c7b6C18,0x00B02c14e7,2629702091,0X896B363f,0X6DcDAE63,0x6111DfF8,2123814920},...);end;
