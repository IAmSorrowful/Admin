return(function(xi,Oi,Yi,Ji,di,Ci,ri,Li,ji,ti,Zi,Ki,Qi,Xi,Ni,bi,ci,Ui,Di,hi,ui,mi,Wi,Ti,Ei,Fi,qi,ei,si,ki,yi,oi,Hi,Ri,pi,V,...)local A,S,f,g,E,c,b,o=nil,nil,nil,nil,nil,nil,nil,(nil);for o4=0X0,0X00007 do if o4<=3 then do if not(o4<=0X1)then if o4==2 then f=ci;else do g=Wi;end;end;else if o4~=0 then S=Qi;else A=Ei;end;end;end;else do if o4<=5 then if o4~=4 then c=Zi;else E=bi;end;else if o4==0x00006 then b=table.insert;else do o={[0X0]={[0X0]=0,0X01,0X2,3,4,0X5,0X6,7,8,0X9,0X00A,11,12,0XD,mi,0X00f},{[0]=0X001,0X0,0X00003,Ji,0X005,4,7,0X06,0X9,8,11,0Xa,di,12,0X00F,14},{[0x0]=0X0002,3,0x0,0X1,6,0X007,4,Li,0X000a,si,8,0X009,0XE,Di,qi,0xD},{[0X000]=0X00003,0X002,1,0X0000,7,6,0X5,4,11,10,9,0X08,15,14,di,qi},{[0]=4,5,0X006,0x07,0,Ci,0X2,3,0X0000C,0XD,0X000E,0XF,0x8,9,Oi,0xb},{[0X0]=5,0X00004,0X00007,0x6,0X00001,0,0X3,0X0002,0XD,0Xc,0Xf,14,9,8,0Xb,Oi},{[0]=0X6,7,4,5,2,3,0X0,Ci,0Xe,0x00f,12,0X000d,0Xa,0xb,pi,0X09},{[0]=0x07,6,Li,4,3,2,1,0,15,0xe,13,0X0c,11,10,Ui,8},{[0X00]=8,9,Oi,11,0xc,13,14,15,Yi,0X1,Ji,3,4,0X5,6,7},{[0]=9,0X8,11,0xa,0X000d,12,15,14,0X00001,0,3,2,5,4,7,6},{[0X0]=10,0Xb,0x0008,9,14,0x0f,0X0C,13,0X2,3,0x00000,Ci,6,ji,4,5},{[0X0]=11,10,9,0X8,15,14,0XD,12,3,2,0X00001,0,7,0X6,0x5,Ni},{[0]=0xC,0xD,0xE,15,0x8,Ui,10,11,0X4,0X5,0X6,ji,0X0000,1,0X2,0X3},{[0X0]=0xD,0XC,0XF,14,0X9,8,11,0Xa,5,0X4,0x7,0X6,0X01,Yi,3,0X002},{[0]=14,0X000f,12,13,0xA,0Xb,8,Ui,0x6,0X7,0X004,5,2,3,Yi,Ci},{[Yi]=0Xf,0x0E,0X0000d,12,0XB,0X000A,9,pi,ji,6,5,4,3,2,1,0x00}};end;end;end;end;end;end;local L,a=coroutine.wrap,(assert);local m,d,x,z,s=nil,nil,nil,nil,(nil);for cK=0,0x05 do if cK<=2 then if not(cK<=0X0)then do if cK==1 then do d=xi;end;else do x=4294967296;end;end;end;else m=ri;end;else if not(cK<=0X00003)then if cK~=4 then else do s=coroutine.yield;end;end;else z=Xi.byte;end;end;end;local C=(getfenv);local O=(nil);local B=(tonumber);for Pa=0,1 do do if Pa==0 then do O=(C and C()or ki);end;else end;end;end;local U,li="LPH~local v=type;local Y,Q=nil,(nil);while li<0X2 do if li~=0 then Q=yi;li=2;else li=0X1;end;end;local P,D,p=error,nil,(nil);for rq=0,2 do if not(rq<=0)then do if rq==0X001 then D=ui or table.unpack;else do p=1;end;end;end;else do U=c(g(U,5),"..",function(Xf)if z(Xf,0X2)~=72 then local OU=E(B(Xf,0x0010));do if not(Y)then do return OU;end;else local Jz=Q(OU,Y);local Hz=0X0000;repeat if Hz~=0 then return Jz;else Y=Hi;Hz=1;end;until false;end;end;else Y=B(g(Xf,0X1,1));return"";end;end);end;end;end;local Z=(setmetatable);local j=(function()local Py,Fy=0X0,nil;while Py<2 do if Py~=0x0 then do p=p+Ci;end;Py=2;else do Fy=z(U,p,p);end;Py=0x0001;end;end;do return Fy;end;end);li=0;local r,y,X=nil,nil,nil;repeat if li<=0 then r=2147483648;do li=0X001;end;else do if li~=1 then X=0X002^0X34;li=0X00003;else y=r-1;do li=2;end;end;end;end;until li==0X3;local N=(function()local PD,TD,lD,rD=nil,nil,nil,nil;do for ew=0,0X1 do if ew==0 then PD,TD,lD,rD=z(U,p,p+3);else do p=p+4;end;end;end;end;do return rD*16777216+lD*0X10000+TD*256+PD;end;end);local k=(x-0x1);li=3;local q,H,K,u,h=nil,nil,nil,nil,(nil);do while 225923666 do if not(li<=0X2)then if not(li<=0X3)then do if li==4 then do K=function()local xB,EB=N(),N();do if not(EB>=r)then else EB=EB-x;end;end;return EB*x+xB;end;end;li=5;else u=function(iB,JB,oB)local OB,LB=1,nil;repeat do if OB~=0 then LB=(iB/H[JB])%H[oB];OB=0X00000;else do LB=LB-LB%0X1;end;OB=0X002;end;end;until OB>=0X2;return LB;end;li=0;end;end;else q=Ki;li=0X01;end;elseif not(li<=0X0)then do if li~=0X1 then do local ma=nil;local za=0X01;repeat do if za~=0 then ma=0X2;za=0;else for Ii=Ci,0x1f do local Mi=(0X1);repeat if Mi==0 then ma=ma*2;Mi=0x0002;else H[Ii]=ma;Mi=0X0;end;until Mi>=2;end;za=2;end;end;until za>1;end;li=0X4;else H={[0]=1};li=0X0002;end;end;else h=function()local oE=(2);local FE,GE,mE,qE,gE,LE=nil,nil,nil,nil,nil,(nil);do while(true)do if not(oE<=0X00003)then if not(oE<=5)then if oE<=6 then if not(FE==0X0 and mE==Yi)then else return 0;end;do oE=0X7;end;else if oE==7 then qE=(-0X1)^u(mE,31,0X1);oE=0x0;else return qE*(0x02^(gE-0x003FF))*(LE/X+GE);end;end;else if oE~=0X0004 then LE=u(mE,0,20)*x+FE;oE=0X3;else do mE=N();end;oE=6;end;end;else if oE<=1 then if oE==0 then gE=u(mE,20,si);oE=5;else GE=0x1;oE=4;end;else if oE~=2 then if gE==0X00000 then if LE~=0 then local zA=(1);while zA<=0x1 do if zA==0X000 then GE=0;zA=2;else gE=1;do zA=0X00;end;end;end;else do return qE*0;end;end;elseif gE==2047 then if LE==0 then do return qE*(0/0x00000);end;else return qE*(0X1/0);end;end;oE=8;else do FE=N();end;oE=1;end;end;end;end;end;end;do break;end;end;end;end;local F=((bit or hi));local T=(F and F.bxor or function(lN,EN)local SN=(nil);local gN=(1);while gN~=0X002 do if gN==0X0000 then SN=0X1;gN=2;else lN=lN%x;do gN=0X0;end;end;end;do gN=0X0002;end;local uN=nil;do while'\067\097\115\091'do do if not(gN<=0X0)then do if gN==0X0001 then do uN=0;end;do gN=0X0;end;else EN=EN%x;do gN=1;end;end;end;else do while lN>0x0 and EN>0X00 do local HI,qI,uI=3,nil,(nil);repeat do if not(HI<=0x1)then do if not(HI<=0X2)then if HI==0X03 then qI=lN%16;HI=2;else uN=uN+o[qI][uI]*SN;HI=0X1;end;else uI=EN%0X000010;HI=4;end;end;else if HI==0 then EN=(EN-uI)/0x10;HI=5;else lN=(lN-qI)/16;do HI=0X0;end;end;end;end;until HI>4;do SN=SN*16;end;end;end;break;end;end;end;end;return uN+lN*SN+EN*SN;end);local t=F and F.band or function(eU,MU)local wU=(2);repeat if wU<=0X0 then return((eU+MU)-T(eU,MU))/0X2;else if wU~=0X0001 then do eU=eU%x;end;do wU=1;end;else MU=MU%x;wU=0X0;end;end;until false;end;local e=(F and F.bor or function(oa,Aa)for cK=0,2 do if cK<=0x0 then oa=oa%x;else do if cK~=1 then return k-t(k-oa,k-Aa);else Aa=Aa%x;end;end;end;end;end);local R,l=F and F[oi]or function(RT)return k-(RT%x);end,F and F[Fi];local w=F and F[Ti];l=l or function(hQ,WQ)local BQ=1;while BQ<=1 do if BQ~=0 then if not(WQ>=0x20)then else return 0X00000;end;BQ=0X0;else if WQ<0 then return w(hQ,-WQ);end;BQ=2;end;end;do return(hQ*H[WQ])%x;end;end;w=w or function(l6,G6)local e6=(nil);for y8=0X0000,0X2 do if y8<=0X0 then do if not(G6>=32)then else return 0;end;end;else if y8~=1 then e6=(l6%x/H[G6]);elseif not(G6<0)then else return l(l6,-G6);end;end;end;return e6-e6%1;end;local I,vi={[0X4]=3,[3]=0X4,[0X6]=0X2,[7]=0x3,[4]=0X6,[0X7]=4,[0X4]=0X04,[0X005]=Ui,[0X1]=0X05,[7]=0X0004,[9]=1,[2]=0x007},0X00001;li=0X1;local G,Si,Vi=nil,nil,(nil);repeat do if li<=0x0 then Si={};li=2;else if li~=1 then do Vi=j();end;do li=0x0003;end;else G=function()local c1=0;local Y1=0X0000;while"?$U"do local n6=z(U,p,p);p=p+1;c1=e(c1,l(t(n6,0x7F),Y1));if t(n6,128)==0x0 then do return c1;end;end;Y1=Y1+0X0007;end;end;do li=0X0;end;end;end;end;until li==0X3;local ni=j();local ai=function(QU)local hU,CU,rU,RU,DU,nU=0X4,nil,nil,nil,nil,(nil);while true do if not(hU<=0X003)then if not(hU<=5)then if hU==0X6 then p=p+4;hU=0X0007;else do return nU*16777216+DU*0X00010000+RU*0x000100+rU;end;end;elseif hU==4 then CU={z(U,p,p+3)};hU=0X3;else DU=T(CU[3],ni);do hU=0X0;end;end;else if hU<=1 then do if hU~=0 then do RU=T(CU[2],ni);end;hU=0X5;else do nU=T(CU[4],ni);end;hU=2;end;end;else do if hU~=2 then do rU=T(CU[0X1],ni);end;hU=0X1;else ni=(197*ni+QU)%0X0100;hU=0X6;end;end;end;end;end;end;li=0;local M,Ai,i,J,Bi,W,fi,Pi=nil,nil,nil,nil,nil,nil,nil,(nil);while li<0x09 do if li<=0X03 then if li<=1 then if li==0X00 then M=function()local vZ=(G());local JZ=0X0;do repeat if JZ~=0X00000 then do return vZ;end;else if not(vZ>y)then else do return vZ-x;end;end;JZ=1;end;until(false);end;end;li=0x00004;else W=Ri;li=2;end;else if li~=0x2 then J=ti;li=0x5;else fi={};li=0X006;end;end;else if not(li<=0x00005)then do if li<=6 then do li=7;end;else if li==0x7 then function Pi(jR,uR,yR)local aR,IR,UR,rR,HR,wR,ER=jR[0X8],jR[1],jR[0X00004],jR[0X002],jR[3],jR[5],(jR[7]);local kR=jR[0X9];local qR=Z({},{__mode='v'});local VR=(nil);VR=function(...)local jT,JT=0X1,({});local yT=((C and C()or _ENV));local xT=0;local mT={[0x1]=jR,[0X2]=JT};local FT,KT=Bi(...);local RT=(yT==O and uR or yT);FT=FT-0X1;for CM=0X0,FT do if not(IR>CM)then break;else JT[CM]=KT[CM+1];end;end;if not HR then do KT=nil;end;elseif wR then do(JT)[IR]={n=FT>=IR and FT-IR+0X1 or 0,D(KT,IR+1,FT+0X1)};end;end;if RT==yT then else if q then(q)(VR,RT);else do _ENV=RT;end;end;end;local bT,MT,XT,QT=S(function()while true do local rm=kR[jT];local ym=(rm[0X006]);jT=jT+0x1;if ym>=0X02D then if not(ym>=0X00043)then if ym>=0X038 then if not(ym>=0X003d)then if not(ym>=58)then if ym~=0X39 then if not(JT[rm[3]]<=JT[rm[0X2]])then do jT=rm[0X00001];end;end;else local iO=(rm[0X1]);local tO,RO=JT[iO]();if tO then JT[iO+1]=RO;jT=rm[0X3];end;end;else do if not(ym<0x3B)then if ym~=0X003c then JT[rm[0X1]][rm[4]]=rm[7];else if JT[rm[0X3]]<=JT[rm[0X0002]]then jT=rm[1];end;end;else local hp=rm[1];local Fp,xp,Op=JT[hp]();if not(Fp)then else do JT[hp+0X001]=xp;end;do(JT)[hp+2]=Op;end;jT=rm[3];end;end;end;end;else do if not(ym<0X000040)then if not(ym>=65)then if not(JT[rm[3]]<=rm[0X7])then jT=rm[1];end;else do if ym~=66 then local Ii=(rm[1]);local Mi,ii=JT[Ii]();if Mi then for FC=1,rm[2]do do JT[Ii+FC]=ii[FC];end;end;do jT=rm[0X3];end;end;else local Su=(yR[rm[0X3]]);do(Su[0X1])[Su[2]]=JT[rm[0X1]];end;end;end;end;else if ym>=0X3E then if ym==0X00003F then(JT)[rm[1]]=JT[rm[0x3]]%JT[rm[2]];else local E2=rm[1];for iA=E2,E2+(rm[0X3]-0x1)do do(JT)[iA]=KT[IR+(iA-E2)+0X1];end;end;end;else(JT)[rm[0x00001]]=JT[rm[0X03]]>JT[rm[0X00002]];end;end;end;end;else if ym<0X032 then if not(ym>=0X0002f)then if ym~=46 then if JT[rm[3]]~=JT[rm[0X02]]then do jT=rm[1];end;end;else local lh=(rm[1]);local Qh,ih=JT[lh]();if not(Qh)then else jT=rm[0x3];(JT)[lh+0X0003]=ih;end;end;else if ym<0X30 then do if not(JT[rm[3]]<JT[rm[2]])then jT=rm[0X1];end;end;else if ym~=49 then do(JT)[rm[1]]=true;end;else JT[rm[1]][JT[rm[0X3]]]=rm[0x7];end;end;end;else if not(ym>=53)then if not(ym<0x33)then do if ym~=52 then JT[rm[0X0001]]=JT[rm[0X3]]^JT[rm[2]];else repeat local OX,nX=qR,(JT);do if#OX>0 then local Wg=({});for jl,Hl in d,OX do for gf,Zf in d,Hl do if Zf[0X00001]==nX and Zf[2]>=0 then local xx=(Zf[0X2]);do if not Wg[xx]then Wg[xx]={nX[xx]};end;end;do(Zf)[0X1]=Wg[xx];end;Zf[0X00002]=1;end;end;end;end;end;until true;local Nn=(rm[1]);return false,Nn,Nn+rm[3]-2;end;end;else local Z7=JT[rm[3]]/JT[rm[0x2]];(JT)[rm[0x0001]]=Z7-Z7%0x01;end;else if not(ym<0X36)then if ym==0X37 then repeat local u7,X7=qR,JT;do if not(#u7>0)then else local eQ={};for QX,aX in d,u7 do for De,We in d,aX do if not(We[0X01]==X7 and We[2]>=0X00)then else local H7=(We[0x002]);if not(not eQ[H7])then else(eQ)[H7]={X7[H7]};end;We[1]=eQ[H7];(We)[0X00002]=0X1;end;end;end;end;end;until true;return true,rm[0x1],0x1;else(JT)[rm[0X1]]=#JT[rm[3]];end;else repeat local a1,I1,g1=qR,JT,(rm[1]);if not(#a1>0)then else local wi={};do for t5,s5 in d,a1 do for RQ,LQ in d,s5 do do if not(LQ[1]==I1 and LQ[0X2]>=g1)then else local Xl=(LQ[2]);if not(not wi[Xl])then else do(wi)[Xl]={I1[Xl]};end;end;LQ[0X1]=wi[Xl];(LQ)[2]=1;end;end;end;end;end;end;until true;end;end;end;end;else do if ym<78 then do if not(ym<72)then if not(ym>=75)then if not(ym<73)then if ym==0X4A then local vk,tk=rm[0X001],rm[0X3];do xT=vk+tk-1;end;repeat local s0,w0=qR,(JT);if#s0>0X0 then local WM={};do for HA,EA in d,s0 do for F_,P_ in d,EA do do if not(P_[1]==w0 and P_[2]>=0X0)then else local E6=P_[0x02];do if not WM[E6]then(WM)[E6]={w0[E6]};end;end;(P_)[0X1]=WM[E6];do(P_)[0X2]=0X01;end;end;end;end;end;end;end;until true;return true,vk,tk;else local Yc=rm[1];local Ec=(FT-IR);if not(Ec<0)then else Ec=-1;end;for un=Yc,Yc+Ec do JT[un]=KT[IR+(un-Yc)+0X1];end;xT=Yc+Ec;end;else local BT=(rm[1]);JT[BT](JT[BT+0x1]);do xT=BT-0X01;end;end;else if not(ym>=0X0004c)then JT[rm[1]]=JT[rm[0X0003]][JT[rm[2]]];else if ym==77 then xT=rm[1];(JT[xT])();xT=xT-1;else JT[rm[0X1]]=RT[rm[0x4]];end;end;end;else if ym>=69 then do if not(ym>=70)then local jE=yR[rm[3]];do JT[rm[1]]=jE[1][jE[0X002]];end;else if ym~=0x47 then(JT)[rm[0x01]]=JT[rm[3]]+JT[rm[0X002]];else if JT[rm[0X3]]<JT[rm[0X0002]]then jT=rm[0X001];end;end;end;end;else do if ym~=68 then if rm[0x2]==0X4F then do jT=jT-0X0001;end;(kR)[jT]={[0X00006]=0x057,[3]=(rm[0x003]-41),[1]=(rm[0X00001]-0X29)};elseif rm[0x2]==0X00056 then jT=jT-0X00001;kR[jT]={[1]=(rm[1]-0X00002A),[0x6]=87,[3]=(rm[3]-0x2A)};elseif rm[2]==123 then jT=jT-0X1;(kR)[jT]={[0X1]=(rm[1]-0X0097),[6]=0X7,[0x0003]=(rm[3]-151)};else repeat local gp,hp=qR,(JT);if not(#gp>0)then else local H6={};for fA,mA in d,gp do do for ef,Rf in d,mA do if Rf[1]==hp and Rf[2]>=0 then local wm=Rf[2];if not H6[wm]then(H6)[wm]={hp[wm]};end;do Rf[0X1]=H6[wm];end;do(Rf)[0X2]=0X1;end;end;end;end;end;end;until true;return false,rm[1],xT;end;else local vT=rm[0X2];local rT,WT=rm[0X001],(rm[3]);if WT==0 then else xT=rT+WT-1;end;local VT,dT=nil,(nil);do if WT~=0X1 then do VT,dT=Bi(JT[rT](D(JT,rT+0X00001,xT)));end;else VT,dT=Bi(JT[rT]());end;end;if vT==1 then xT=rT-0X1;else if vT~=0X0 then VT=rT+vT-2;xT=VT+0X1;else VT=VT+rT-1;xT=VT;end;local T5=(0);for le=rT,VT do do T5=T5+1;end;JT[le]=dT[T5];end;end;end;end;end;end;end;else if not(ym<0X0054)then do if not(ym<0X57)then if ym<0X58 then if rm[0X2]==0x0022 then do jT=jT-1;end;kR[jT]={[6]=0X49,[1]=(rm[1]-0X0001f),[3]=(rm[3]-31)};else JT[rm[1]]=JT[rm[3]];end;else if ym==0X59 then mT[rm[3]]=JT[rm[1]];else do if JT[rm[1]]then jT=rm[0X003];end;end;end;end;else if not(ym>=0x55)then JT[rm[0X1]]=R(JT[rm[0X3]]);else do if ym~=86 then(JT)[rm[1]]=w(JT[rm[3]],JT[rm[2]]);else do jT=rm[3];end;end;end;end;end;end;else if not(ym>=81)then if not(ym>=79)then JT[rm[1]]=rm[0X4];else if ym==0X50 then local Zj=rm[1];local Jj=(L(function(...)(s)();for TQ in...do(s)(true,TQ);end;end));Jj(JT[Zj],JT[Zj+1],JT[Zj+0X2]);do xT=Zj;end;JT[Zj]=Jj;jT=rm[3];else do JT[rm[1]]=not JT[rm[0X3]];end;end;end;else if ym<82 then local dA,oA=rm[0X00001],(JT[rm[0X003]]);JT[dA+1]=oA;JT[dA]=oA[rm[0X7]];else do if ym~=0X53 then RT[rm[0X4]]=JT[rm[1]];else local ua=rm[1];(JT)[ua]=JT[ua](JT[ua+0X1]);xT=ua;end;end;end;end;end;end;end;end;else if not(ym>=0X016)then if ym>=11 then do if not(ym>=0X10)then if ym<0XD then do if ym~=0Xc then local VE=(rm[0X3]);local XE=(JT[VE]);for o0=VE+1,rm[0X2]do XE=XE..JT[o0];end;(JT)[rm[0X1]]=XE;else if JT[rm[3]]==rm[7]then jT=rm[0X1];end;end;end;else if ym<0Xe then(JT)[rm[1]]=JT[rm[0X3]]==JT[rm[0X2]];else do if ym==15 then do JT[rm[0x001]]=JT[rm[0X3]][rm[7]];end;else local qK=rm[1];local DK,LK=JT[qK],(rm[0X2]-1)*50;do for HQ=0X001,rm[3]do(DK)[LK+HQ]=JT[qK+HQ];end;end;end;end;end;end;else if not(ym<0X13)then if ym>=0X0014 then do if ym~=21 then(JT)[rm[1]]=JT[rm[0x3]]-JT[rm[0X02]];else local eH=(rm[0X3]);JT[rm[0X0001]]=JT[eH]..JT[eH+0x1];end;end;else JT[rm[1]]=fi[rm[3]];end;else do if ym<0X000011 then JT[rm[0x001]]=JT[rm[3]]<=JT[rm[0X00002]];else do if ym~=18 then(JT)[rm[0X0001]]=rm[0X004];else JT[rm[0X01]][rm[4]]=JT[rm[2]];end;end;end;end;end;end;end;else if ym>=5 then if ym<8 then if not(ym<0X6)then do if ym~=0x7 then local LM=rm[1];xT=LM+rm[3]-0X1;(JT[LM])(D(JT,LM+0X00001,xT));xT=LM-1;else JT[rm[0X1]]=nil;end;end;else local D7=rm[0X01];(JT[D7])(D(JT,D7+1,xT));do xT=D7-1;end;end;else if not(ym<9)then if ym==10 then repeat local Sm,im=qR,JT;do if not(#Sm>0)then else local Nd=({});for x8,i8 in d,Sm do for qh,jh in d,i8 do if not(jh[1]==im and jh[0x00002]>=0)then else local Gl=(jh[0x2]);if not Nd[Gl]then Nd[Gl]={im[Gl]};end;do(jh)[1]=Nd[Gl];end;(jh)[0x2]=0X0001;end;end;end;end;end;until true;return true,rm[1],0;else(JT)[rm[0X1]]=mT[rm[3]];end;else if not(not JT[rm[1]])then else do jT=rm[3];end;end;end;end;else if not(ym<0X2)then do if not(ym>=0X3)then do JT[rm[0x1]]=t(JT[rm[0x3]],JT[rm[2]]);end;else if ym~=4 then local wX=rm[0X1];do(JT)[wX]=JT[wX](D(JT,wX+0X1,xT));end;xT=wX;else do JT[rm[1]]={D({},0X0001,rm[3])};end;end;end;end;else if ym~=0X1 then if rm[0X2]==0xB7 then do jT=jT-0X1;end;(kR)[jT]={[0X1]=(rm[0x01]-57),[0x6]=52,[0X03]=(rm[3]-0X39)};else repeat local Y_,u_=qR,(JT);if not(#Y_>0x0)then else local Y7=({});do for Fy,zy in d,Y_ do for L8,f8 in d,zy do if f8[1]==u_ and f8[0X2]>=0X0 then local A4=f8[0X2];if not Y7[A4]then(Y7)[A4]={u_[A4]};end;(f8)[1]=Y7[A4];(f8)[0x2]=1;end;end;end;end;end;until true;return;end;else local R_=(aR[rm[3]]);local C_=(R_[0x6]);local o_=(nil);local K_=(#C_);if not(K_>0X0000)then else o_={};for Zl=1,K_ do local Rl=(C_[Zl]);if Rl[0X1]==0X0 then(o_)[Zl-0X1]={JT,Rl[0X2]};else(o_)[Zl-1]=yR[Rl[0X02]];end;end;b(qR,o_);end;do JT[rm[1]]=Pi(R_,RT,o_);end;end;end;end;end;else if ym<0X21 then if not(ym<0x001b)then if ym>=0X1e then if ym<0x1f then do JT[rm[1]]=T(JT[rm[0X3]],JT[rm[2]]);end;else do if ym==0X20 then(JT)[rm[1]]={};else JT[rm[1]]=JT[rm[3]]*JT[rm[2]];end;end;end;else if ym<28 then(JT)[rm[0X1]]=JT[rm[3]]<JT[rm[2]];else if ym~=29 then fi[rm[0X0003]]=JT[rm[0x00001]];else JT[rm[1]]=JT[rm[3]]~=rm[7];end;end;end;else do if not(ym<24)then if ym>=25 then if ym~=26 then do if JT[rm[0X3]]==JT[rm[0X00002]]then do jT=rm[0x00001];end;end;end;else do JT[rm[1]]=JT[rm[3]]~=JT[rm[2]];end;end;else do if JT[rm[0X00003]]==rm[0x7]then else do jT=rm[0x1];end;end;end;end;else if ym~=23 then do(JT[rm[1]])[JT[rm[3]]]=JT[rm[2]];end;else local nJ=(rm[1]);local DJ=L(function(...)(s)();for UB,nB in...do s(true,UB,nB);end;end);(DJ)(JT[nJ],JT[nJ+1],JT[nJ+2]);xT=nJ;(JT)[nJ]=DJ;jT=rm[0X0003];end;end;end;end;else if not(ym>=39)then if ym>=36 then if ym<37 then do xT=rm[0X00001];end;(JT)[xT]=JT[xT]();else do if ym~=0X26 then for wb=rm[0X1],rm[3]do do(JT)[wb]=nil;end;end;else do JT[rm[0x00001]]=JT[rm[0x3]]>=JT[rm[0X0002]];end;end;end;end;else if ym>=0X22 then do if ym~=35 then do JT[rm[1]]=l(JT[rm[3]],JT[rm[0X2]]);end;else JT[rm[0X1]]=JT[rm[0x3]]%rm[0x07];end;end;else local Q6=rm[0X0001];local X6,W6=JT[Q6],(JT[Q6+0X001]);local f6=JT[Q6+0X02];do JT[Q6]=L(function()do for db=X6,W6,f6 do(s)(true,db);end;end;end);end;do jT=rm[3];end;end;end;else if not(ym>=0X0002a)then do if not(ym<0X28)then do if ym~=0X29 then do(JT)[rm[1]]=false;end;else local Aq=(rm[0x1]);(JT[Aq])(JT[Aq+0x1],JT[Aq+2]);xT=Aq-1;end;end;else local jo,ao=rm[1],((rm[2]-0x1)*50);local ko=(JT[jo]);for Fm=1,xT-jo do ko[ao+Fm]=JT[jo+Fm];end;end;end;else if not(ym>=43)then local S8=(rm[0X01]);JT[S8]=JT[S8](JT[S8+1],JT[S8+2]);xT=S8;else if ym==44 then do(JT)[rm[0x1]]=JT[rm[0X3]]/JT[rm[2]];end;else JT[rm[1]]=-JT[rm[0X3]];end;end;end;end;end;end;end;end;end);if not(bT)then if v(MT)=="string"then if W(MT,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if W(MT,"^.-:%d+: ")then(P)("Luraph Script:"..(rR[jT-0x00001]or"(\105nte\114n\097\108\041")..": "..f(MT),0X0);else P(MT,0);end;else P(MT,0);end;else if MT then if QT~=0X1 then return JT[XT](D(JT,XT+0X00001,xT));else return JT[XT]();end;elseif XT then do return D(JT,XT,QT);end;end;end;end;do if q then(q)(VR,uR);end;end;return VR;end;li=0x9;else i={0x3,Ji,0X1};do li=3;end;end;end;end;else if li~=0X04 then Bi=function(...)return A(ei,...),{...};end;li=0x00001;else Ai=function(fQ)local IQ,xQ,EQ=0X2,nil,nil;do while(true)do do if IQ<=0X1 then if IQ==0X0 then do p=p+xQ;end;IQ=0x00001;else do return EQ;end;end;else do if not(IQ<=0X02)then do if IQ~=3 then do for BK=0X001,xQ,7997 do local iK,GK,KK=0X2,nil,nil;while iK<0X00004 do if iK<=1 then if iK~=0X0 then if not(GK>xQ)then else do GK=xQ;end;end;iK=0X3;else for Pm=1,#KK do do(KK)[Pm]=T(KK[Pm],Vi);end;do Vi=(fQ*Vi+0X11)%256;end;end;iK=0x00004;end;else if iK==0x02 then GK=BK+0x0001F3D-0X1;iK=1;else KK={z(U,p+BK-0X1,p+GK-1)};iK=0;end;end;end;EQ=EQ..E(D(KK));end;end;do IQ=0;end;else do EQ='';end;IQ=0x00004;end;end;else do xQ=N();end;IQ=0X3;end;end;end;end;end;end;end;li=0x8;end;end;end;end;li=0;local gi,zi=nil,nil;while li<=2 do if not(li<=0)then if li~=1 then do fi[0X2]=Si;end;do li=3;end;else zi=gi();do li=0X2;end;end;else function gi()local H8=8;local G8,q8,B8,Y8,K8,D8=nil,nil,nil,nil,nil,nil;repeat if not(H8<=0x7)then do if not(H8<=11)then if H8<=13 then do if H8==0XC then(q8)[Oi]=j();H8=0Xf;else K8=j();H8=0x6;end;end;else do if not(H8<=14)then do if H8~=15 then q8[5]=u(K8,0X00002,1)~=0;H8=0X4;else q8[19]=N();H8=0x00001;end;end;else for PF=1,G()do B8[PF]={j(),G()};end;H8=2;end;end;end;else do if not(H8<=9)then if H8~=10 then for od=1,D8 do local Ad=N();local ud=N();local Kd,qd=0x00000,nil;while(true)do do if Kd==0 then do qd=N();end;do Kd=1;end;else do for Rk=Ad,ud do q8[0X002][Rk]=qd;end;end;break;end;end;end;end;do H8=12;end;else q8[0x00a]=j();H8=7;end;else if H8==0X00008 then H8=0X3;else B8={};H8=0x0;end;end;end;end;end;else do if not(H8<=3)then do if not(H8<=0x00005)then do if H8==6 then(q8)[3]=u(K8,0X01,1)~=0;H8=16;else D8=N();H8=11;end;end;else do if H8==0X0004 then do q8[0x0006]=B8;end;H8=0X000E;else q8={nil,{},Hi,nil,nil,nil,Hi,{},{}};H8=0X09;end;end;end;end;elseif H8<=0X1 then do if H8~=0 then do q8[0x12]=N();end;break;else Y8={};H8=0X0d;end;end;else do if H8~=2 then G8={};do H8=0X5;end;else(q8)[7]=G();H8=10;end;end;end;end;end;until false;H8=0X1;local P8,v8=nil,nil;repeat if H8<=1 then if H8==0X00 then(q8)[1]=G();H8=0X04;else q8[qi]=j();H8=3;end;else if not(H8<=2)then if H8~=3 then do(q8)[18]=j();end;H8=2;else P8=1;H8=0;end;else do v8=N()-0X00012F16;end;break;end;end;until(false);local A8=q8[0X9];H8=0X8;local L8,I8,g8=nil,nil,nil;while H8<=8 do do if not(H8<=3)then do if not(H8<=0X0005)then do if not(H8<=6)then do if H8==0x7 then do L8=N()-0X00016f10;end;H8=0;else for Yf=0X001,v8 do A8[Yf]={[0X1]=M(),[0X6]=G(),[0X00005]=j(),[0X2]=M(),[0x3]=M(),[7]=j(),[4]=j()};end;H8=0X4;end;end;else for TU=1,L8 do local dU,sU=nil,(nil);local WU=0x0;repeat if WU==0X0 then dU=j();WU=0X1;else sU=Hi;WU=0X2;end;until WU==0X2;G8[TU-0X1]=P8;do if dU==0X003D then sU=g(Ai(I8),0X3);elseif dU==0X0038 then sU=g(Ai(I8),N());elseif dU==0x093 then sU=false;else if dU==0X7 then sU=g(Ai(I8),h()+N());else if dU==85 then sU=g(Ai(I8),h()+N());elseif dU==0X000D6 then sU=h();elseif dU==0X0004 then sU=true;else if dU==86 then sU=K();else if dU==120 then sU=K();end;end;end;end;end;end;local EU=({sU,{}});do WU=0X0;end;repeat if not(WU<=0x0)then if WU~=1 then if not(g8)then else do Si[vi]=EU;end;vi=vi+1;end;do WU=0X3;end;else P8=P8+0X1;WU=2;end;else do(Y8)[P8]=EU;end;WU=1;end;until WU==3;end;H8=5;end;end;else if H8==4 then q8[15]=N();H8=0X7;else for SU=0X1,v8 do local dU=q8[0X9][SU];for E2,u2 in ipairs(i)do local b2,V2,C2=0X1,nil,nil;while true do if b2~=0x0000 then V2=I[u2];b2=0X0;else C2=dU[V2];break;end;end;if C2==0x001 then local r4,T4,C4=1,nil,(nil);repeat if not(r4<=0)then do if r4~=1 then if not(C4)then else(dU)[V2]=C4[1];local oJ=C4[Ji];do oJ[#oJ+Ci]={dU,V2};end;end;break;else T4=G8[dU[u2]];r4=0;end;end;else do C4=Y8[T4];end;r4=2;end;until false;else if C2==0XC then do dU[u2]=SU+dU[u2]+0X0001;end;end;end;end;end;do H8=0X2;end;end;end;end;else if not(H8<=1)then if H8~=0X2 then g8=j()~=0x00000;H8=6;else(q8)[16]=N();H8=1;end;else if H8==0X0 then I8=j();H8=0X0003;else q8[0X00004]=G();H8=9;end;end;end;end;end;local h8=(q8[0X8]);H8=0x000;local Z8=nil;while true do do if not(H8<=0X0)then if H8==0x1 then return q8;else do for FA=0,Z8-1 do h8[FA]=gi();end;end;H8=0x1;end;else Z8=N()-0x00003cc7;H8=0X00002;end;end;end;end;li=0X0001;end;end;Si=nil;return Pi(zi,O,Hi)(...);end)(next,10,0X0,0x2,13,0x1,rawget,5,0X007,rawset,string.gsub,setfenv,pcall,string,4,string.char,tostring,0X9,0X000F,bit32,unpack,14,string.sub,'\114shi\102\116',select,'\108\115\104\105\102\116',0X0000C,'\035',11,_ENV,string.rep,"\098n\111t",nil,string.match,0X008,{0X000850c,0XcE1E3083,0x005c132dac,1988462047,2573889043,4226475879,0X638E8b0a,0xEda95C58,0X0007ef7ad4},...);
