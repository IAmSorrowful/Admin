return(function(JM,WM,EM,xM,fM,rM,HM,qM,gM,sM,yM,BM,mM,PM,TM,CM,pM,MM,tM,eM,IM,SM,oM,jM,ZM,KM,uM,bM,NM,LM,VM,XM,RM,GM,DM,zM,nM,AM,O,...)local w,F,i=tostring,nil,nil;local a=pcall;local k=(select);for iQ=0,1 do if iQ~=0 then i=fM.char;else F=string.sub;end;end;local l,E,K,v=nil,nil,nil,(nil);local V=string.gsub;local cM=0x2;local p=(1);while cM~=0X004 do if cM<=0x1 then if cM==0X0 then v=EM;do cM=4;end;else E=table.insert;cM=3;end;elseif cM==2 then l=VM;cM=0X1;else do K=DM.yield;end;cM=0X0;end;end;local YM,W={},rawset;cM=0x0;local S,s=nil,(nil);while cM<=1 do if cM~=0 then s=GM or NM.unpack;cM=0X2;else S=coroutine.wrap;cM=1;end;end;local f=(WM);local o=getfenv;cM=1;local t,h=nil,(nil);while cM<3 do do if not(cM<=0X0)then if cM~=1 then h=fM.byte;cM=0x3;else do t=(o and o()or IM);end;do cM=0;end;end;else cM=0x0002;end;end;end;cM=2;local z,e=nil,nil;repeat if cM<=0X0 then cM=1;elseif cM~=1 then z="LPH:17A0004F302H000D050B000B00390C050B000B00390B050B000B003907000B000B003C000E0B000B2H00010E0B000B0017E0012H0B000B0045ED012H0B000B0045D4012H0BFC010B774F6D2H0BA7010B131198012H0B120B52586F2H0B7E0B2226652H0B540BBF0120482H0B7B0B220001000B000B003C002H0B000B004801050B000B0039EA012H0B000B00242H000B000B003C000E0B000B0050000E0B000B2H0001050B000B0039000E0B000B3H000E0B010B0050002H0B010B0013002H0B000B003001050B000B0039B5012H0B000B0024002H0B000B0025CA792H0059818BA0276HFF065B970B02E2CD68012H0015312H009701050B000B00399601050B000B00399501050B000B00390B000B000B003C2A0E0B000B2H00050E0B000B0017E2012H0B000B0045E9012H0B000B0045322H0B420B013F242H0B270B7A3188012H0BB1010B6C58AA012H0B220B8B015296012H0B5A0BA901558A01050B000B0039002H0B070B004E3A0E0B070E1854090E0B080B2H00082H0B080E150401050B000B00392A0E0B080B2H00082H0B080E2A0401050B000B00392A0E0B080B2H00240E0B070B082B16050B000B0039380E0B060B072B06050B000B0039380E0B080B092B00050B000B0039002H0B060B002101050B000B0039642H0B060B0024BB01050B000B0039002H0B040B0021032H0B050E1406EA3HFF0F050B000B0039032H0B040E3706002H0B060B004E3A0E0B060E0C54190E0B060E3254390E0B060E235406000B070B003CEE3HFF0F050B000B0039002H0B080B004E3A0E0B080E1B5405000B090B003CEC3HFF0F050B000B00393B0E0B070E335404000B080B003C380E0B070B082B002H0B050B002101050B000B0039302H0B050B0024032H0B060E0A06F43HFF0F050B000B0039090E0B050B2H0001050B000B00392A0E0B050B2H00052H0B050E150401050B000B00392A0E0B050B2H00052H0B050E320401050B000B00392A0E0B050B2H00050B059A010E13108901050B000B00390F0E0B050E0D542F050B000B0039022H0B020E220637050B000B0039002H0B020B002101050B000B0039A8012H0B020B0024022H0B030E07062E050B000B0039310E0B050E04543D0E0B040B052B41050B000B00392E0E0B050E045421050B000B0039002H0B010B001E4E050B000B0039110E0B010B2H0001050B000B00392A0E0B010B3H002H0B010B004801050B000B00397C2H0B010B0024100E0B010B2H0001050B000B00392A0E0B010B2H000B0E0B020B2H00E73HFF0F050B000B00392B0E0B050E1D5400050B000B0039200E0B050E2954260E0B050E045431050B000B0039050E0B040E0854002H0B050B004EE93HFF0F050B000B0039320E0B020E13540E050B000B0039150E0B010B022B2H000B010B003C15050B000B0039090E0B010B2H0001050B000B00392A0E0B010B3H002H0B020B004EF63HFF0F050B000B0039250E0B010B0050E13HFF0F050B000B0039300E0B050E0D54CF3HFF0F050B000B0039170E0B040B052B18050B000B00392A0E0B020E2354F03HFF0F050B000B0039360E0B040B052BCD3HFF0F050B000B00392F0E0B050B00171A0E0B060B0017042H0B030B004421050B000B00392C0E0B040B001709050B000B0039110E0B010B005007000B010B003CED3HFF0F050B000B0039042H0B040E150401050B000B00392A0E0B040B2H00042H0B040E322H040B05550E13281A050B000B0039032H0B020B003001050B000B0039272H0B020B0024002H0B010B0023C33HFF0F050B000B0039002H0B050B004E06050B000B0039060E0B040E2354002H0B050B004E000E0B050E0154CA3HFF0F050B000B0039320E0B050E1C54E23HFF0F050B000B00392E0E0B050E0454340E0B050E1F54B33HFF0F050B000B00392D0E0B000B0017D03HFF0F050B000B0039002H0B040B004E3A0E0B040E12542H0E0B040E1254C43HFF0F050B000B0039090E0B040B2H00E23HFF0F050B000B0039012H0B020E2106F83HFF0F050B000B0039813HFF0F050B000B0039002H0B060B002120050B000B0039032H0B050E0A06002H0B070B004E3A0E0B070E3C5400050B000B003902000B080B003C2C050B000B0039002H0B040B0021F83HFF0F050B000B002H390E0B090E23542A050B000B0039032H0B080E0A06002H0B0A0B004E22050B000B00393A0E0B090E275415050B000B0039002H0B090B004EFC3HFF0F050B000B0039380E0B0A2H0B2B002H0B080B002122050B000B0039090E0B070B2H00072H0B070E150402050B000B0039002H0B070B0021F13HFF0F050B000B0039072H0B070E320401050B000B00392A0E0B070B2H00350E0B060B072BE83HFF0F050B000B0039000E0B060E0254F43HFF0F050B000B0039032H0B070E3706ED3HFF0F050B000B0039380E0B090B0A2BF33HFF0F050B000B0039190E0B090E3254E23HFF0F050B000B0039032H0B040E0306002H0B060B004EF53HFF0F050B000B0039002H0B050B002101050B000B0039742H0B050B0024032H0B060E28061E0E0B080B0017CF3HFF0F050B000B00393A0E0B0A0E165403003H0B003CDF3HFF0F050B000B0039380E0B070B082BF53HFF0F050B000B003901000B0A0B003CEC3HFF0F050B000B00393F2H0B3E0BC00105090E0B040B2H0001050B000B00392A0E0B040B2H00042H0B040E152H042H0B040E2A2H040B05F93HFF0F0E0428D4FE2HFF0F050B000B0039077A2H00ADD9DC0A3H001782D1341B08F5E444C9DC153H00591CE35E7DF8FC6E2DD712DA5E85F092C1DC0B3D08DC123H00403722F1D45E00B3CC07E593E1CE69032334DC143H007201A4CB269E5D0CDEE95A41AE6F8EAEED3C6F899ADC143H0076B5489F6AECDB852CC15AA3B3A506E0A17CC891DC0E3H00BAA92CB3EEAC4C56060EE2FBE0DADC0E3H00E8BF0AB9FC61DC574F4EFB5E1F70DC133H0066E5B84F5A6312451AF35124B63DC84D235103DC073H00DFAAD99C638B33DC113H00F0275261845063465CCFECE958F7953CB3DC093H00B7A27154BB3D5F3F63DC0E3H004AF93C837EFC79A152B1E79272BCDC0D3H00F88F9A090C616FCF723EC18B89DC113H00DBF635C81F5170F8732471766354EB55E2DC0D3H00464598AF3A649F868364172FA3DC0F3H00B194FB9655C7C27A9D1019A168C52ADC113H0032C1648BE640AF79583FBD147805FEFFEFDC103H00D1341B367598FCAE0DD7E26A4EC5F543DC4H00DC113H00E104AB8685E9ECBFF7165BC6B98D799623DC0F3H00D43BD695A8F5A06AC68F4BEC1D55AADC173H0001A4CB26A598AB6779AA940FB170BCB02E91F338F331DDDC183H006A995C239E74D631E3EEC6CA4766ADB69A19E25E335E9738DC0F3H006231147B16819F9CABFAA21D390B70DC143H0007B241E40B3B75C246D639D4392FBC8161C6F9EF8B1DCEF755FD3HFFDC0A3H009BB6F588DF58CB97816ADC0B3H00FDF02752619C61A2B7288DDC0F3H00FAE96CF32E05B7DFC2BD0325FE8B0FDC113H00FF4AF93C83E216A20139F0E0E94CF08E2EDC0F3H009A090C13CE2541D1A2C24574124735DC093H001FEA19DCA373A0B522DC113H0092A1C46B4679E407E786E3CD5F14221D61DC0C3H00B194FB9655B3299FD9D4D8F728DC113H005DD08732C10BB52H0E950618EA493CA9D9DC113H00A01782D1346808EDC090F427E1B2273C66DC0C3H00A7D2E104AB0197ECCB41C3CBDC0C3H0073AE8D403771988861445856DC103H007FCA79BC032B3A3145B4D508958A4D68DC0D3H000F1A898C939B22FE6F7E72489CDC093H0076B5489F6A991F74ABDC0D3H00BDB0E71221B8A0595D7A010F44DC453H002CB3EECD807860F040CBBE6B07D2C5A38E5F9DE0C0A53611035D1687E7AE30716E4C9A3727BD7BB7D854A1FC5F4156F18F6A15AD4EF9F10894178985216E2B27AF4D46F7EDDC163H00B7A27154BB3C4C3275BBC21E66ED1CDA32A725418650DC0C3H0025F88F9A09EF98FBBCCE73D6DC0E3H0091F4DBF635D0A91EE112350E6643DC0F3H006792A1C46B167F30A86D6A82ED4D25DC124H00F7E2B19455E852E4CA9FDACBBD02961F24DC083H0032C1648BE601E3CBDC0C3H00DA494C530E5544AABCB5B62HDC0B3H003675085F2A252HD6251855DC0C3H00A7D2E104AB5AC45B47E44D51DC103H0073AE8D403711C3CBCDA7525E97141151DC103H0003FE9D10C76C3FAA106B28F6B77F78DBDC0D3H00934EADE057738138481A19972FDC1D3H006A995C239EC57CD24A11A44B30DF0DFE33A374EDE338FACAB6CB8E6C61DC093H00D5E8BF0AB960F353E7DC093H005007B241E4A3A71864DC153H004F5AC9CCD3D1177DA05446059E9DDB8D63D4AFF531DC0C3H00DEFDF027525F14F0E2FCFF4FF3B0762D0DADD368012H0068302H000D050B000B00390C050B000B00390B050B000B003905000B000B003C090E0B000B2H000A0E0B000B0017E5012H0B000B0045EB012H0B000B0045772H0BB0010BA1014AFA012H0BA2010BCD013E3H0BE7010B5A1DBD012H0B9D010B6832222H0BC2010B3A578B012H0BD6010BBA012A040E0B000B2H0001050B000B0039090E0B000B3H002H0B000E0306010E0B020B0017002H0B000B002101050B000B00391B2H0B000B0024020E0B010B2H0001050B000B0039090E0B010B2H0001050B010B004718050B000B00393F2H0B3E0BC00105070E0B010B2H0001050B000B0039090E0B010B3H002H0B020E2H06020E0B040B3H002H0B050B000801050B000B0039090E0B050B2H00022H0B040B003001050B000B0039732H0B040B0024002H0B020B002301050B000B0039F13HFF0F050B000B0039050E0B010B022BFD3HFF0F050B000B0039000E0B010B2H0001050B000B0039090E0B010B3H002H0B020B0008002H0B010B000EE93HFF0F050B010B0047E93HFF0F050B000B0039000E0B010B2H00E63HFF0F050B010B0047F63HFF0F050B000B0039D1792H00ED4FDC0B3H00FA692CB3AE87C1202BA2BFDC103H007BD615683F8F7113D9C46055F7DED6D2DC0D3H000B262538CFCACDFD1816B92079DC0F3H004211B49B7628B4A3DE8A5B3134CC84DC093H00A79221842B613B1BE7DC0F3H003AA96CF3EE5D549AC2A7D73C51ADFEDC0F3H007F8AB93C83760F6F0668F98BCF38B9DC073H00780FDAC90C248E2EB8A6480645CB680100013H003A2DAC6E173H00013H00083H00013H00093H00093H001650DA040A3H000A3H00505FAC7C0B3H000B3H0016262C400C3H000C3H00CFDA1D040D3H000D3H00997CBE0A0E3H000E3H00EC1DA92F0F3H00113H00013H00123H00143H00073H00153H00163H00013H00173H00173H00073H00183H00193H00013H001A3H001B7H001C3H001F3H00013H00203H00223H00093H00233H00243H00013H00253H00253H00093H00263H00273H00013H00283H00293H00093H002A3H00303H00013H00313H00333H00083H00343H00343H00013H00353H00369H000H0049302H000D050B000B00390C050B000B00390B050B000B003903000B000B003C040E0B000B2H00050E0B000B0017E0012H0B000B0045ED012H0B000B004580012H0B0A0BFB0105C7012H0B580BD60155D7012H0B9C010B2732C3012H0B550B7C2AF0012H0B0C0BE70131F7012H0BDB010B7132010E0B010B2H0001050B000B0039040E0B010B2H00012H0B010E000401050B000B0039040E0B010B3H002H0B020B0005020E0B010B022BAF012H0BAE010BE10109CC792H00EDE0DC0F3H006DE0578251EE21D5BF54BAEB443E8BDC073H00DE7DB0E7D202D8DC083H006B0685182F9BA50D5D70A94A04ADCB68013H00EF0FF9140A3H00013H00083H00013H00093H00093H00848AC6520A3H000A3H004C3B543A0B3H000B3H00C50487460C3H000C3H00A0FB2H5F0D3H000D3H00282FF85E0E3H000E3H00AB4310390F3H00113H00013H00123H00123H005F3H00133H00173H00013H00010064302H0010050B000B00390F050B000B00390E050B000B003904000B000B003C0B0E0B000B2H000C0E0B000B0017E0012H0B000B0045EB012H0B000B0045FB012H0B1D0BB2014FE6012H0B83010B2H2AA5012H0B150BBC0120372H0B250B3B11692H0B7A0B890105F3012H0B330B9B010F3A2H0BD4010B9701526F2H0BB9010BA60141F1012H0BFC010B2815002H0B000B000801050B000B00390B0E0B000B3H002H0B000E0706002H0B000B000301050B000B0039302H0B000B0024030E0B000B2H00030E0B010B2H0001050B000B00390B0E0B010B2H00012H0B010E0904012H0B010E050401050B000B00390B0E0B010B2H00040E0B000B012B010E0B000B2H00080E0B010B2H00012H0B010E022H060E0B030B0017002H0B040B0035042H0B010B003001050B000B0039D3012H0B010B0024002H0B000B002301050B000B0039EE012H0B000B0024002H0B000B0048000E0B000B2H0001050B000B00390B0E0B000B3H002H0B000B00483F2H0B3E0BC00105D3792H0055A8DC113H0033E65530E76ECEA74A6EBAADEB7441865CDC0F3H00762540373A9E915392590AD88F4C59DC0C3H00D306F55087D3FD5FE524A417DC073H002F92717C23438BDC0B3H0060D75AD904842554E64EA8DC083H00418C732695F98363DC483H00A9149B6E7D5F655BED4403E062F500589320B0BB4542333A6ED20BCCC28935AA1393B74CA2DAFEE69C5AEAE07F358ED8DB72F520EC53FCE6331894CEC4892ECE998A304123DBE4CEDC0C3H0051DC03F6A5C8B973F4FE8391DC093H008DC85F82219EB6C8E2DC0F3H00D0074A8974C68145BF0CFA4BB4662B78D6D5230536CB6801000100010056218F34163H00013H00083H00013H00093H00093H0032CA76260A3H000A3H0080404C780B3H000B3H00261A0C3B0C3H000C3H00E6EA1D2B0D3H000D3H00764E1A280E3H000E3H0086A8CC380F3H000F3H00EC679D62103H00103H000F983863113H00113H0069128745123H00143H00013H00153H00163H00533H00173H001C3H00013H001D3H001E3H00543H001F3H00233H00013H00243H00273H00553H00283H00293H00013H002A3H002A3H00553H002B3H002C3H00013H002D3H002E3H00553H002F3H00303H00013H00313H00323H00565H005A302H000E050B000B00390D050B000B00390C050B000B003904000B000B003C0B0E0B000B2H000C0E0B000B0017E3012H0B000B0045EC012H0B000B0045FB012H0B1F0BF201165B2H0BE0010B5A3FE1012H0B2B0B5C15FB012H0B93010B2A228F012H0B400BF60141FF012H0BB9010B3E50712H0BA5010BDB0156002H0B000B0008002H0B000E0006002H0B000B0003090E0B000B2H00090E0B010B2H00012H0B010E0104012H0B010E050401050B000B00390B0E0B010B2H00060E0B000B012B070E0B000B2H0001050B000B00390B0E0B000B2H00030E0B010B2H00012H0B010E0806040E0B030B0017002H0B040B0035042H0B010B0030002H0B000B0023002H0B000B004801050B000B0039EC012H0B000B0024020E0B000B3H002H0B000B0048152H0B140B1324D3792H003DD5DC0C3H004568BF7A096F80388DF1CA7ADC0F3H0051442B36D5644F53CD2EAC65E6C415DC113H0032E1943B06A09CCD7CA808B745AA731CCADC093H0071E44BD6F53507BFCBDC483H000CD33EBD00B9C3A1376ADDDA48D3C63259FE9E91BFE415A014BCB596A8AF73C0596D99A6387C18DCC62H349A9553C8F2912C1BCAD6359AFC8936EA94EEEF68E453B45E6BB9BD42B4DC083H00749BE6C5E8479DF1DC0B3H009C234E8D90000190720224DC0F3H0055384FCA19BAE5173EC5B6C4AB08ADDC0C3H0086E5885F9A41B7B9D3D60EB9DC073H0082F164CB560347E8EFD95305E6CB6801000100012H008CE80A113H00013H00083H00013H00093H00093H00D018E5080A3H000A3H00CF216A300B3H000B3H003C8152630C3H000C3H0027C17F5D0D3H000D3H0046A9D9570E3H000E3H005D10F4590F3H000F3H00DDADE60B103H00103H00013H00113H00123H00653H00133H00143H00013H00153H00163H00663H00173H001D3H00013H001E3H00233H00673H00243H00253H00013H00263H00263H00673H00273H00283H00685H004C302H000E050B000B00390D050B000B00390C050B000B003904000B000B003C050E0B000B2H00060E0B000B0017E3012H0B000B0045EE012H0B000B0045A1012H0BE1010B521C272H0BA8010B6D1686012H0B5D0B63593A2H0B600BA6010FB9012H0B170B261D8F012H0BED010B4720272H0B200BE9015A010E0B010B2H00012H0B010E020401050B000B0039050E0B010B3H002H0B020B0005030E0B010B022B000E0B010B2H0001050B000B0039050E0B010B3H002H0B010B0048152H0B140B1324CD792H009553DC113H006F92F13CE3D262D3061ADE516F583D7260DC073H0022C14C33A601EDDC0F3H0067EA29D45B3B5AF850A921BEB30B80DC093H00C0B77AF9E4277116B13731F4320432CB68013H00856337120C3H00013H00083H00013H00093H00093H0098F744600A3H000A3H00F6042A160B3H000B3H00683660390C3H000C3H00FFF5423D0D3H000D3H00BCF133300E3H000E3H002E08BD270F3H000F3H0086EF7C31103H00103H00013H00113H00113H00403H00123H00183H00013H00193H001A3H00413H00010068302H0010050B000B00390F050B000B00390E050B000B003904000B000B003C0B0E0B000B2H000C0E0B000B0017E1012H0B000B0045EB012H0B000B00450A2H0BD0010B84012481012H0B3C0BA50124F5012H0B650B2500462H0B88010BCB01410D2H0B2F0B81013294012H0BB7010B0D201A2H0B632H0B02CA012H0B460B09342B2H0B250B4556002H0B000B000801050B000B00390B0E0B000B3H002H0B000E0506002H0B000B000301050B000B0039EE012H0B000B0024070E0B000B2H00070E0B010B2H0001050B000B00390B0E0B010B2H00012H0B010E000401050B000B00390B0E0B010B2H00012H0B010E2H04080E0B000B012B010E0B000B2H0001050B000B00390B0E0B000B2H00030E0B010B2H00012H0B010E2H06090E0B030B0017002H0B040B0035042H0B010B003001050B000B0039FC012H0B010B0024002H0B000B002301050B000B0039F4012H0B000B0024002H0B000B0048020E0B000B2H0001050B000B00390B0E0B000B3H002H0B000B004801050B000B0039BF012H0B000B0024152H0B140B1324D3792H009D73DC0F3H005F3A89FC833928DE365BA320BDA9B2DC0F3H00D86F0A194C3E8173BA198A38678C49DC113H00A5287FDAA9E8D4CD4C60500765928BBCBADC093H00788FAA39ECCFB5F95DDC083H0017120194BB9A2674DC0C3H009F7AC93CC3FEBB21F240D123DC0C3H00CB765518AF7F41737940F0D3DC073H0037B22134DBEF97DC0B3H0068BF1AE9DC300160EA6264DC483H00B184EB1675FE5642F21500A9C5F49331DC31132262E3E08311A34845E58806C39CA2D4F5853B0D7F038BE9A998B49D71946316398BB2AF1F0CA957C7A3085DE7967B9338C47A2HD73EEBF43005CFCB680100010001002BD4792C1A3H00013H00083H00013H00093H00093H003F4703170A3H000A3H00A7987F6A0B3H000B3H005CA198390C3H000C3H0060A95D700D3H000D3H0045EFF04E0E3H000E3H00BBEE6B550F3H000F3H002B1A1451103H00103H00152H337E113H00113H00C2EE367D123H00143H00013H00153H00163H00473H00173H001C3H00013H001D3H001D3H00483H001E3H001F3H00013H00203H00203H00483H00213H00253H00013H00263H00293H00493H002A3H002B3H00013H002C3H002C3H00493H002D3H002E3H00013H002F3H00303H00493H00313H00323H00013H00333H00333H004A3H00343H00353H00013H00363H00363H004A5H004C302H000C050B000B00390B050B000B00390A050B000B003904000B000B003C050E0B000B2H00060E0B000B0017E3012H0B000B0045EA012H0B000B0045622H0B5D0B8E012A702H0B6C0B980137CF012H0BCE010B4B059C012H0B250BC20145762H0B300BDA012A010E0B010B2H00012H0B010E030401050B000B0039050E0B010B2H006C2H0B6E0BFF0124020E0B010B022B000E0B010B2H0001050B000B0039050E0B010B3H002H0B010B004801050B000B0039102H0B010B0024002H0B000B0014CD792H00058EDC113H00B994DB3E2D10441D3C980057F5BA3B4C0ADC073H0024AB4E7D686FEBDC083H00B16C1356A5668E28DC0F3H0059B47B5ECDCE59CDEF046243741E63FF3D4A020447CB68013H00899CD10F0C3H00013H00083H00013H00093H00093H00DF6EF26D0A3H000A3H0022BB945C0B3H000B3H007061C6010C3H000C3H00F8036B400D3H000D3H005601A93E0E3H000E3H00013H000F3H000F3H00373H00103H00163H00013H00173H00173H00383H00183H00193H00013H001A3H001A3H00383H0001006A302H0019050B000B003918050B000B003917050B000B003905000B000B003C0A0E0B000B2H000B0E0B000B0017E4012H0B000B0045EE012H0B000B0045CB012H0BD0010B2B41E2012H0B200BC60122F7012H0B750BF7010FB7012H0BF7010BDB015A7F2H0B9C010B5D34712H0BA5010B6331D1012H0B96010BA7013E692H0BD3010B4C5A09050B000B0039002H0B020B000301050B000B00399F012H0B020B002410050B000B0039030E0B020B2H0001050B000B00390A0E0B020B2H00010E0B030B0017F73HFF0F050B000B0039040E0B010B2H00012H0B010E002H060E0B030B0017002H0B010B002101050B000B0039A0012H0B010B0024050E0B020B2H0001050B000B00390A0E0B020B2H00F13HFF0F050B020B004708050B000B0039152H0B140B1324B1012H0BB5010B4613002H0B020B005C01050B000B0039DE012H0B020B0024FA3HFF0F050B000B0039002H0B030B0008F93HFF0F050B000B0039012H0B020E0206070E0B040B2H0001050B000B00390A0E0B040B2H00042H0B040E080401050B000B00390A0E0B040B3H002H0B020B0021B3012H0BB1010B4613050E0B020B2H00F33HFF0F050B000B0039D2792H00D5DBDC0F3H008AC9343B0E3AC2D58C2855FF56FE32DC2D3H00171A99448BDD50798FB554F36EF8EC330983DEA89C2BFDECBC8F32683CAB29EAA59E17BC8F3D5C28056EC7AFFDDC0F3H0006F5D007CA5DFAF8EBA20FA4BA430CDC0A3H00A396C5E0572E089FD40ADC093H00ADE8FF2241941C06CCDC0E3H00F0A7EAA99437B63D549D127D0435DC103H00B66500F77AD3310FE1E0D041FF92D6BEDC073H00463510470A31C5DC0F3H00BB8E1D18EFEB3A2HD8E9D19E9BDB60F2D28D1806F7CB680100013H00C192231A1E3H00013H00083H00013H00093H00093H00428B6F4D0A3H000A3H007E4705560B3H000B3H00C6CBDB5E0C3H000C3H0025A82B7C0D3H000D3H000B6B67030E3H000E4H00A81F1D0F3H000F3H003A7A6772103H00103H00F417AC56113H00113H00013H00123H00123H00143H00133H00143H00013H00153H00153H00143H00163H001B3H00013H001C3H001E3H000F3H001F3H00203H00013H00213H00213H000F3H00223H00233H00013H00243H00257H00263H00273H00013H00283H00283H00123H00293H002A3H00013H002B3H002B3H00123H002C3H002D3H00013H002E3H002F3H00113H00303H00313H00013H00323H00323H00113H00333H00343H00013H00353H00353H00113H00363H00383H00015H000287E7345A563H00013H00083H00013H00093H00093H0079C982180A3H000A3H00B7F5D0480B3H000B3H00412D530B0C3H000C3H008C43CB5E0D3H000D3H00DC43C40D0E3H000E3H00013H000F3H00113H003B3H00123H00123H003D3H00133H00143H00013H00153H00153H003D3H00163H00173H00013H00183H00193H003D3H001A3H001B3H00323H001C3H001E3H00443H001F3H00203H00013H00213H00213H00443H00223H00223H00323H00233H00243H003B3H00253H002B3H00323H002C3H002F3H00443H00303H00323H003D3H00333H00333H003B3H00343H00353H00013H00363H00373H00443H00383H003A3H00013H003B3H003B3H004E3H003C3H003D3H00013H003E3H003E3H004E3H003F3H00403H00013H00413H00423H004E3H00433H00443H00193H00453H00463H00183H00473H00473H00193H00483H00493H00013H004A3H004B3H00303H004C3H00503H00193H00513H00523H00183H00533H00553H00013H00563H00563H00173H00573H00583H00013H00593H00593H00173H005A3H005B3H00013H005C3H005D3H00173H005E3H00653H00193H00663H00713H00013H00723H00753H00193H00763H00773H00013H00783H00793H00193H007A3H007D3H00303H007E3H007F3H00183H00803H00823H00013H00833H00833H00313H00843H00853H00013H00863H00883H00313H00893H00893H00183H008A3H008B3H00013H008C3H008D3H00183H008E3H00983H00193H00993H009A3H00013H009B3H009E3H00193H009F3H00A03H00303H00A13H00A23H00193H00A33H00A33H00313H00A43H00A53H00593H00A63H00AB3H00503H00AC3H00AD3H004F3H00AE3H00AF3H005A3H00B03H00B23H00623H00B33H00B63H005A3H00B73H00B93H00623H00BA3H00BC3H004F3H00BD3H00BE3H005A3H00BF3H00BF3H004F3H00C03H00C13H00013H00C23H00C53H004F3H00C63H00CB3H005A3H00CC3H00CE3H004F3H00CF3H00CF3H00503H00D03H00D13H00013H00D23H00D43H00593H00D53H00D73H00623H00D83H00D93H00503H00DA3H00DB3H005A3H00DC3H00DF3H00013H00E03H00E33H004E5H008D322H00E103050B000B0039E003050B000B0039DF03050B000B003909000B000B003C140E0B000B2H001B0E0B000B0017E2012H0B000B0045E8012H0B000B0045FE012H0B370B9A010A622H0B1E0B9E0134762H0B170BFC011C042H0B280BFE0159082H0B570BE101093B2H0B97010BB0013A1D2H0B3C0B1C3E422H0BA7010B36599A012H0B410B7A3FD003050B000B0039210B058C010B22550B050B000B00398E012H0B90010BFF0124BD01050B000B0039222H0B240B2258A802050B000B0039240E0B240B2H008F012H0B91010BFF0124002H0B240B000E01050B000B0039FE012H0B240B00244F050B240B0047B804050B000B00391C2H0B240B0005002H0B240B002F002H0B260B004D01050B000B00396F2H0B260B002448050B000B00391C2H0B290B00050F050B000B0039100E0B270B2H0001050B000B0039140E0B270B2H008F012H0B94010BFF0124052H0B290B0005002H0B2A0B004E1D2H0B2B0B000510050B000B0039262H0B250B0005022H0B260B004590012H0B93010BFF0124D6012H0BD9010B4613022H0B260B0118232H0B160B263302050B000B0039042H0B260B001B04050B000B0039742H0B92010BFF012H242H0B270B0005020E0B280B0017E93HFF0F050B000B003991012H0B92010BFF01241C2H0B1A0B263302050B000B0039032H0B290B0030E03HFF0F050B000B00393H0B260B0005E43HFF0F050B000B003990012H0B8F010BFF0124222H0B240B2H22FA01050B240B0047CF3HFF0F050B000B0039ED02050B2B0B003E9402050B000B0039002H0B2F0B002101050B000B0039F7012H0B2F0B00242F2H0B2F0B1142142H0B2F0B2F2901050B000B0039140E0B2F0B2H002E2H0B280B002C00050B000B0039122H0B2E0B11512H050B000B00392D2H0B310B0005F33HFF0F050B000B00396D2H0B9B010BFF01242H050B000B0039D401050B000B00392E2H0B2E0B132A2E2H0B2E0E283B9A012H0B7D0BFF0124FB3HFF0F050B000B0039D6012H0BE1010B4613F53HFF0F050B000B0039D9012H0BDF010B4613F53HFF0F050B000B0039270B05770E0A28B501050B000B0039E503050B200B003DA901050B000B0039270B05FB3HFF0F0E0D2808050B000B0039DD03050B200B00311B2H0B210B0005120E0B220B0017FC3HFF0F050B000B0039120E0B200B0017FB3HFF0F050B000B0039AA3HFF0F050B200B003ECA03050B000B0039252H0B290E182E5C050B290B0047D503050B000B0039D3012H0BD6010B4613222H0B260B00050F050B000B0039300E0B210B202B2F0E0B210B202B200E0B210B202B0C0E0B210B202B29050B000B0039222H0B230B0005D3012H0BD5010B4613F53HFF0F050B000B0039030E0B210B202B2H0E0B210B202B14050B000B0039000E0B210B1C2H2B0E0B210B202B270E0B210B202BF13HFF0F050B000B0039012H0B260B003001050B000B00398B012H0B260B0024002H0B230B002301000B240B003C8E012H0B91010BFF012412050B000B0039002H0B220B0021ED3HFF0F050B000B0039002H0B240B002101050B000B00390A2H0B240B002442050B240B004714050B000B00392D0E0B210E255403050B000B00391C0E0B210B202B260E0B210B202BFB3HFF0F050B000B0039B6012H0BD3010B4613002H0B230B004ED2012H0BD5010B4613F03HFF0F050B000B0039060E0B210B202BE03HFF0F050B000B0039D3012H0BD7010B4613EE3HFF0F050B000B00392H000B200B003C00050B000B0039002H0B210B004EDD3HFF0F050B000B0039190E0B210B202B0B0E0B210B202BF53HFF0F050B000B0039EDFE2HFF0F050B000B0039002H0B240B0025210B053A0E162804050B000B0039BE012H0BD2010B4613202H0B220B0005002H0B210B000EFA3HFF0F050B000B00395C050B000B0039120E0B200B00171B2H0B210B0005120E0B220B0017BA3HFF0F050B200B00311A2H0B260B252930050B000B0039102H0B240B232901050B000B0039140E0B240B2H00242H0B250E120401050B000B0039140E0B250B2H00242H0B260E110401050B000B0039140E0B260B2H00BE012H0BD8010B4613252H0B280B000500050B000B0039002H0B270B000E002H0B280B005B270B05270E3228B702050B000B00393D050B200B0031120E0B200B0017682H0B790B382700050B000B0039120E0B220B0017FA3HFF0F050B000B0039E702050B290B004636050B000B0039C801050B290B000CAB02050B000B003909050B000B0039692H0B690B820127DA012H0BD9010B4613FC3HFF0F050B000B00394F050B240B000C08050B000B0039002H0B2B0B005BF43HFF0F050B290B002D262H0B2A0B0005FC3HFF0F050B000B0039782H0B95010BFF0124FC3HFF0F050B000B0039222H0B240B223FB501050B000B00398E012H0B90010BFF012444050B000B0039BD012H0BD1010B46131D2H0B210B000597012H0B97010B5C37803HFF0F050B200B001F88012H0B8D010BFF0124002H0B210B002FC9FE2HFF0F050B260B000CD402050B000B0039F13HFF0F050B000B0039002H0B290B003595012H0B94010BFF0124FC3HFF0F050B000B0039270B05F9FE2HFF0F0E312814050B000B00396C2H0B6C0BED011400050B000B0039DB02050B240B002DB6012H0BD2010B461308050B000B0039002H0B210B005C01050B000B00391F2H0B210B0024002H0B210B004E002H0B220B004E07050B000B0039632H0B630B820127F83HFF0F050B000B0039D1012H0BD3010B4613FC3HFF0F050B000B0039782H0B90010BFF01248C012H0B91010BFF0124EE3HFF0F050B000B0039002H0B230B0001FB3HFF0F050B000B0039E63HFF0F050B250B0047CD3HFF0F050B000B0039B13HFF0F050B200B003E9501050B000B0039222H0B240B223ABCFE2HFF0F050B000B0039D1012H0BD4010B4613002H0B220B000E220B05E63HFF0F0E141002050B000B0039062H0B220B0005FA3HFF0F050B000B0039D53HFF0F050B000B0039002H0B200B005B00050B000B0039022H0B200B004C152H0B140B1324260B05B8020B2132EC01050B000B0039292H0B280B000500050B000B0039252H0B290B005A02050B000B00390F0E0B290B0017FA3HFF0F050B000B0039290B05A4020E15499C01050B000B003913050B160B003E8902050B000B0039222H0B240B2216A3FE2HFF0F050B240B00470B050B000B0039D5012H0BD4010B4613FB3HFF0F050B000B0039D5012H0BD4010B461300050B000B0039222H0B240B222A222H0B250B2251252H0B250B2215222H0B260B2211252H0B250B2657242H0B240B254AF53HFF0F050B000B0039D83HFF0F050B000B0039B1FE2HFF0F050B2A0B003E10050B000B0039002H0B210B0025002H0B1A0B0005152H0B1B0B000502050B000B00391A2H0B1A0E283B08050B000B0039002H0B1A0B000E01050B000B0039B5012H0B1A0B0024152H0B140B1A33122H0B1A0B15511A2H0B1A0B132AF73HFF0F050B000B0039DF3HFF0F050B000B00391A2H0B150B0005FD3HFF0F050B000B0039993HFF0F050B000B0039D5012H0BD4010B4613222H0B240B22404F050B240B0047973HFF0F050B000B0039242H0B240E1204082H0B250B000500050B000B003990012H0B92010BFF012400050B000B0039020E0B270B001709050B000B0039100E0B260B2H0004050B000B0039042H0B250B001B01050B000B00393H0B250B0024F401050B000B00398F012H0B93010BFF0124D5012H0BD9010B4613F93HFF0F050B000B0039162H0B280B2329282H0B280E110401050B000B0039140E0B280B2H00042H0B250B001BBC012H0BD6010B4613F03HFF0F050B000B0039162H0B240B2329E73HFF0F050B000B0039042H0B2B0B0005DB012H0BDD010B4613002H0B2B0B000E01050B000B00393E2H0B2B0B002497012H0B94010BFF0124F5FE2HFF0F050B000B0039012H0B280B003001050B000B00392A2H0B280B0024002H0B240B004D01050B000B00392B2H0B240B00248E012H0B90010BFF01241E050B000B0039D3012H0BD9010B4613272H0B270B002C12050B000B00398E012H0B92010BFF01241B050B000B0039222H0B220B243315050B000B00398E012H0B91010BFF0124FA3HFF0F050B000B0039D3012H0BD5010B4613FA3HFF0F050B000B0039222H0B220B243302050B000B0039D3012H0BD9010B4613E93HFF0F050B000B0039000E0B210E14540E0B05B2FE2HFF0F0E171017050B000B0039222H0B260B00050F0E0B270B001702050B000B0039042H0B240B001BF23HFF0F050B000B0039262H0B260B002C0F0E0B270B0017E63HFF0F050B000B0039D3012H0BD7010B461308050B000B0039222H0B240B2229ED3HFF0F050B000B00398E012H0B91010BFF0124FA3HFF0F050B000B0039222H0B270B00058E012H0B94010BFF0124002H0B270B000EE93HFF0F050B000B0039252H0B250B002CEC3HFF0F050B000B0039D5012H0BD4010B4613D3012H0BD5010B4613DE3HFF0F050B000B003902050B000B003995012H0B94010BFF0124C1FE2HFF0F050B000B0039A001050B000B0039C5FE2HFF0F050B000B00390E0B05D0FD2HFF0F0E1710FD3HFF0F050B000B0039240E0B240B2H008F012H0B91010BFF012400050B000B0039002H0B240B000E01050B000B0039C6012H0B240B0024A201050B240B0047B73HFF0F050B000B0039252H0B300B0005DF012H0BE2010B461300050B000B0039002H0B2F0B002101050B000B00392D2H0B2F0B00242F2H0B2F0B1142142H0B2F0B2F2900050B000B00392E2H0B2A0B2F3304050B000B00392F2H0B2F0B132A2F2H0B2F0E283B9B012H0B7D0BFF012404050B000B0039122H0B2F0B1151FA3HFF0F050B000B0039B2012H0BE0010B4613ED3HFF0F050B000B00398FFD2HFF0F050B000B0039120E0B2A0B0017DA012H0BDC010B4613120E0B2C0B0017F1FE2HFF0F050B2A0B0031130E0B070B2H0001050B000B0039140E0B070B2H00070E0B080B2H00020E0B090B2H001C050B000B0039050E0B050B2H0004050B000B0039042H0B040E2E04FC3HFF0F050B000B0039230E0B150B001718050B000B0039090E0B060B2H00F23HFF0F050B000B00391D0E0B130B0017002H0B140B004EF93HFF0F050B000B0039290E3H0B2H0001050B000B0039140E3H0B2H001B0E0B0C0B2H00220E0B0D0B2H0001050B000B0039140E0B0D0B2H001A0E0B0E0B2H0001050B000B0039140E0B0E0B2H00012H0B0F0B000701050B000B0039140E0B0F0B2H00022H0B100B001A230E0B110B0017010E0B120B0017EC3HFF0F050B000B00392A0E0B0A0B2H00ED3HFF0F050B000B0039180E0B160B001716050B000B00390A0E0B000B3H002H0B000E08040A0E0B010B2H0001050B000B0039140E0B010B2H00012H0B010E1E0401050B000B0039140E0B010B2H000A0E0B020B2H0001050B000B0039140E0B020B2H00022H0B020E2C0401050B000B0039140E0B020B2H000A0E0B030B2H0001050B000B0039140E0B030B2H00032H0B030E2104160E0B040B2H00CE3HFF0F050B000B0039120E0B180B0017A4FE2HFF0F050B160B0031040E0B170B0017FC3HFF0F050B000B0039D6012H0BDA010B46139A3HFF0F050B000B0039002H0B290B000100050B000B003995012H0B94010BFF0124D9FD2HFF0F050B000B0039002H0B270B0035272H0B230B0005D3012H0BD8010B4613252H0B200B273346050B000B003999FC2HFF0F050B230B00478BFC2HFF0F050B000B00391C0E0B1D0B1C2B260E0B1D0B1C2B1B050B000B0039270E0B1D0B1C2B300E0B1D0B1C2B2F0E0B1D0B1C2B200E0B1D0B1C2B00050B000B00390C0E0B1D0B1C2B190E0B1D0B1C2B0B0E0B1D0B1C2B17050B000B00392H0E0B1D0B1C2BF23HFF0F050B000B003903000B1E0B003C05000B1F0B003CC0012H0BD1010B4613CAFD2HFF0F050B200B004718050B000B003904000B1C0B003C002H0B1D0B004E000E0B1D0B1C2H2B0E0B1D0B1C2BEB3HFF0F050B000B0039042H0B170B0118002H0B180B004E002H0B190B004E002H0B1A0B004E1F0E0B1B0B0017F53HFF0F050B000B00392D0E0B1D0E2554EE3HFF0F050B000B0039002H0B160B004E042H0B170B004503050B000B0039060E0B1D0B1C2B030E0B1D0B1C2BE63HFF0F050B000B00390F0E0B180B0017002H0B190B0035180E0B1A0B001702000B1B0B003CED3HFF0F050B000B0039F7FC2HFF0F050B000B00392B2H0B2C0E12042B2H0B2D0E1104282H0B2E0B00052D2H0B2C0B2E3300050B000B003992FD2HFF0F050B000B0039E0FE2HFF0F050B100B00478BFD2HFF0F050B000B0039252H0B260B0005F2FB2HFF0F050B000B0039120E0B2B0B001703050B000B0039002H0B2A0B004EFC3HFF0F050B000B003985FC2HFF0F050B2B0B003195012H0B98010BFF0124120E0B2D0B0017FC3HFF0F050B000B0039D6FE2HFF0F050B200B003E98FD2HFF0F050B000B0039252H0B290B002784FD2HFF0F050B000B0039212H0B1D0E141298FC2HFF0F050B000B0039C6FD2HFF0F050B240B0046B83HFF0F050B000B0039002H0B250B002101050B000B0039162H0B250B00241A2H0B260B252901050B000B0039140E0B260B2H0091FD2HFF0F050B260B00472H050B000B0039020E0B270B0017F63HFF0F050B000B0039732H0B91010BFF0124D5012H0BD7010B4613FB3HFF0F050B000B0039D8FC2HFF0F050B000B0039FC792H00F900DC0F3H00C49BBAE1D01859B93300A64B0171798BD17H00DC0D3H0025F44BEA9174984509FE4A6C8EDC093H0098CF4ED524A4452D558BFF7H00DC113H00A7662DBCD341FCBC121BF135DF2B930C32DC093H0096DDEC836216A743DADC0B3H0035845B7AA1E266B1FE7947DC093H0092F928DFDE86DC6AD8DC113H0051C0B7F63D2B86B6C43DFB6FE185D9B664DC0B3H00F06726ED7CE0862BE15159DC093H0045146B0AB17F4833ECDC0A3H00AC432209B8B031982B7FDC0B3H003A6150C78623A99E30DC9ADC0D3H009F9EA574CB354EE318D89E6DD7DC4H00DC0C3H008269184FCE26C10FFCA4DE518B027H008B017H00DC0B3H00E6AD3C53B26B29889960A0288BE8036H00DC0A3H002BCA71E0D7623C0E6F87DC0C3H00C978AF2EB548AE9B0125A9778B8H00DC0A3H000D9CB31279F7002E0A43DC0D3H008B2AD1403729EB893111609741DC093H008E15643B5AEF159FD2DC0C3H006DFC1372D957E0D7ABF08EF28B5F7H00DC093H0031A097D61D4EBAD6EC8B047H00DC0A3H00386FEE752HC4E585B931DC0A3H0006CD5C73D254096B7D4DDC093H00F44BEA9100834F0DE98B6A7H00DC0C3H002302E998CF29B0509D7F2F469ADC0F3H00A7662DBCD36DC6A61A09EC3ACF2F89DC0A3H00605796DDECDC3D289C4B8B00016H00DC0A3H00AE35845B7AD1F366AAE1DC0D3H001C3392F928ABB18BC166C834B2DC0B3H00B7F63D4CE39DF63BEE62F9DC083H00E4BBDA01F015439DDC103H007C93F25988606128711F6BC541753AF8DC0B3H00AC432209B88C019B277A4EDC0A3H006150C7864D83AC3FCC84DC0A3H009F9EA574CB354EF302D4DC0C3H00FD0CA382697A20A139C11AF4DC083H00C1B027E6AD523ADE3AB59A1332BCD168012H0048302H0013050B000B003912050B000B003911050B000B003905000B000B003C010E0B000B2H00020E0B000B0017E3012H0B000B0045ED012H0B000B0045EE012H0B91010B623C342H0B670BFB01478A012H0BFD010B0509F9012H0B7C0B711D1C2H0BF9010B2438752H0BA6010B80013E592H0B660BC20152D2012H0BB1010B850122422H0BD2010B7522782H0B96010BA4010501050B000B0039002H0B000B0014EA012H0BEB010B6C25002H0B010B0025C9792H00DD009F36121303CACB68012H00039262452F6H0044302H000E050B000B00390D050B000B00390C050B000B003904000B000B003C010E0B000B2H00020E0B000B0017E2012H0B000B0045EE012H0B000B0045D9012H0BEB010B810153ED012H0B9D010B3D36A6012H0B97010B9C0142652H0BAC010B1B06D3012H0BA9010BE80140AA012H0B86010B4C29F8012H0BBC010BE70138EA012H0BEB010B6C25002H0B010B0025AF012H0BAE010BE10109C9792H005D0046E238370358CB68012H00035899E06F6H0042302H000E050B000B00390D050B000B00390C050B000B003904000B000B003C010E0B000B2H00020E0B000B0017E6012H0B000B0045EC012H0B000B004594012H0B4E0B5C20152H0B85010BFD0139052H0B110B3E2488012H0BE0010B443EFE012H0BF9010B1F332D2H0BA2010BAC0136F0012H0B2C0B6B09AF012H0BAE010BE10109C9792H0089008A7015740248CB68013H00E2AB93206H006B302H0027050B000B003926050B000B003925050B000B003903000B000B003C010E0B000B2H00050E0B000B0017E4012H0B000B0045EE012H0B000B0045C3012H0B6A0BBF011688012H0B9B010BFD0145D5012H0BBF010BFE013E6F2H0B7D0BCB010C3H0BF7010B52559E012H0B340B04451D2H0BA5010B4318A0012H0BF9010B8001189E012H0BFA010B453E16050B000B0039002H0B080B002101050B000B0039402H0B080B002420050B080B004706050B000B0039030E0B080B2H0001050B000B0039010E0B080B2H00B8012H0BBA010B4613002H0B0A0B0005F53HFF0F050B000B003901050B000B0039152H0B140B1324002H0B080B00357B2H0B81010B4A14022H0B070B062901050B000B0039010E0B070B3H000B05110B0732F13HFF0F050B000B0039000E0B050B00172H050B000B0039002H0B020B004E7D2H0B80010B3D56002H0B020B010D020E0B030B001704050B000B00397D2H0B83010B3D56002H0B040B0023020E0B050B001702050B000B0039010E0B040B2H00F33HFF0F050B000B003902050B030B0031002H0B030B0008002H0B030B002FEA3HFF0F050B030B003EFC3HFF0F050B000B0039002H0B030B0025CD792H00C900DC063H0019984FFE6567DC0B3H005B6A3170E725187096A13D8B017H00DC0D3H00487FAE95F4F97B16456673CCA0707177440B71CB68010001001C0389B0113F4H0001006C302H002D050B000B00392C050B000B00392B050B000B003903000B000B003C020E0B000B2H00070E0B000B0017E2012H0B000B0045EE012H0B000B002H452H0B4B0B99014FB1012H0B9C010BAE01524D2H0B90010BDA010C772H0BE7010B94014FE3012H0BE7010BAE0141792H0B370BFE012A1F050B000B00394HFF0F050B000B0039000E0B010B0017000E0B020B0017000E0B030B001707050B000B0039042H0B030B0019032H0B020B001906050B000B0039052H0B040B0019FB3HFF0F050B000B0039020E0B010B2H002H050B000B0039000E0B040B0017FA3HFF0F050B000B0039022H0B010B0019FA3HFF0F050B000B00393F2H0B3E0BC00105EE3HFF0F050B010B004703050B000B00396C2H0B6F0BFF0124002H0B020B0003FB3HFF0F050B000B0039B2012H0BB3010B4613FB3HFF0F050B000B003903050B010B003EE73HFF0F050B000B0039042H0B050B0633FC3HFF0F050B000B0039012H0B050B0008B1012H0BB7010B4613FB3HFF0F050B000B0039002H0B000B000801050B000B0039020E0B000B2H00030E0B010B0017040E0B020B0017002H0B000B002101050B000B0039472H0B000B0024000E0B010B0017050E0B020B0017010E0B030B0017ED3HFF0F050B010B0031CF792H003D008B8H008B017H00DC0A3H00234E8D904792A3ADC5C2DC063H0055384FCA19EB313H00205FA002428BFF7H006C4FF1510839CB68010006000200140012001300110015006E78CD196H004D302H0016050B000B003915050B000B003914050B000B003903000B000B003C010E0B000B2H00020E0B000B0017E3012H0B000B0045ED012H0B000B0045A4012H0B430BD10131342H0BFD010BAF01224D2H0BC1010B8B013E90012H0B89010BA20150022H0BA7010B1E433F2H0B320B1434A0012H0B780B623CDD012H0B760BCA014B06050B000B0039002H0B020B0025002H0B020B000B4A2H0B4A0BED011400050B000B00397D2H0B82010B3D56FB3HFF0F050B000B0039002H0B020B00086C2H0B6F0BFF0124F93HFF0F050B000B0039AF012H0BAE010BE10109C9792H003D00D8D7306F06B6CB68010001001E03CAA05E0C4H000100023192664B6H0002A189E0765H00";do cM=0x0000;end;else z=V(F(z,5),"..",function(hL)if h(hL,2)~=72 then local k3=i(l(hL,16));do if not(e)then return k3;else local sV=(0);local UV=(nil);repeat if not(sV<=0X0)then if sV~=0X1 then do e=KM;end;do sV=0X0001;end;else return UV;end;else UV=f(k3,e);sV=0X2;end;until(false);end;end;else local BT=(0x0000);repeat if BT==0 then e=l(F(hL,1,SM));BT=0X00001;else return'';end;until(false);end;end);cM=3;end;until cM==3;local M=0X00100000000;local u=function()local Qz=(nil);do for Yv=0X0,2 do if Yv<=0 then do Qz=h(z,p,p);end;else do if Yv~=1 then return Qz;else p=p+0X1;end;end;end;end;end;end;local U=(error);cM=3;local D,r,I,Z=nil,nil,nil,(nil);do repeat if cM<=0X0001 then if cM~=0 then Z=2147483648;do cM=0X4;end;else do I=nM;end;cM=0X1;end;else do if cM~=0X2 then D=string.match;cM=0X2;else do r={7,0X0006,sM};end;cM=0X0;end;end;end;until cM>=0x4;end;local R=function()local u7,Y7,V7,Q7=h(z,p,p+qM);for X9=0X000,1 do if X9~=0X0 then return Q7*16777216+V7*65536+Y7*256+u7;else do p=p+0X00004;end;end;end;end;local T,X={[0]=1},oM^0X34;local B=(Z-0x1);do local YX,pX=0X01,(nil);do while YX<=1 do if YX~=0X000 then pX=2;YX=0;else do for lL=0X1,0X1f do local iL=(0);while'\077\039)H\097R'do if iL~=0 then do pX=pX*2;end;break;else(T)[lL]=pX;iL=1;end;end;end;end;YX=0X2;end;end;end;end;local UM=({});local H=((bit or bit32));cM=0X5;local J,y,N,q,L,m,A=nil,nil,nil,nil,nil,nil,nil;do repeat do if cM<=2 then if cM<=0X0 then L=function()local q4,s4=nil,nil;local b4=(0X1);while b4~=2 do if b4~=0X0 then q4,s4=R(),R();b4=0X0;else if not(s4>=Z)then else do s4=s4-M;end;end;b4=2;end;end;return s4*M+q4;end;do cM=0x003;end;else do if cM==1 then y=M-0X1;cM=0X04;else do q=pM;end;cM=0x000;end;end;end;else do if cM<=0X04 then if cM==3 then m={[0x0]={[0X000]=0X0,0X1,oM,0X3,4,zM,0X6,0X7,8,9,10,11,0X000c,0xd,14,15},{[0]=0X1,0,0x03,0x2,0x005,4,0X7,0X6,0X009,0x08,0XB,10,13,0Xc,15,0xe},{[eM]=2,0X3,0X00,0x1,6,7,0x004,5,0XA,11,uM,9,0XE,RM,ZM,0X000d},{[0X0]=0X3,0X002,1,0X00000,7,MM,0X0005,0X4,0Xb,XM,9,0X8,0xF,yM,13,12},{[0]=4,zM,6,0X7,0X00000,0X01,2,0x3,0XC,0XD,0Xe,15,8,0X00009,10,0xb},{[0]=zM,0X04,7,6,1,eM,0X3,2,0xD,12,15,14,9,8,0Xb,10},{[0X0]=6,7,sM,5,0X2,3,0X0,1,0XE,RM,12,0X0000D,10,11,8,BM},{[0]=7,0X0006,0X5,4,3,0X2,1,0,15,0X00E,0Xd,0x0C,11,10,9,8},{[0]=uM,0X009,0x0000a,11,12,0X0D,14,15,0x00000,0X1,0x2,0X3,0X4,5,MM,7},{[0X000]=9,8,0Xb,10,0XD,12,0X000f,0X0E,SM,0,3,2,5,sM,0x7,6},{[0x0]=10,TM,0X8,BM,14,0X000F,0X0000C,0Xd,2,3,0,1,6,0X7,0X4,0X00005},{[0]=0XB,0x00A,0x09,0X008,15,0x00e,13,12,0x3,0X002,0X1,0x0,JM,6,0X5,0X4},{[0X0]=0XC,0Xd,yM,15,8,9,0x00a,TM,0x0004,0X5,6,7,0,SM,0X2,qM},{[0]=LM,0xc,0XF,0Xe,9,0x8,11,10,0X5,0X4,7,6,0X1,0X0,3,0X00002},{[0]=14,0X000F,12,13,0xa,0XB,8,BM,0x006,0X7,sM,5,2,3,0X0,0X01},{[eM]=15,0xE,13,12,0X000B,0xA,9,8,0X0007,6,0X00005,0x4,3,0x02,0X001,0}};cM=0X6;else N=tM;cM=2;end;elseif cM~=5 then A=function()local vr,Jr,Zr,tr=1,nil,nil,(nil);do while(true)do if not(vr<=1)then if vr==0X2 then tr=(-0x00001)^J(Zr,31,0X00001);break;else if Jr==0X000 and Zr==0X0 then return 0;end;do vr=0x2;end;end;else if vr~=0 then do Jr=R();end;vr=0;else Zr=R();vr=3;end;end;end;end;local xr=J(Zr,0X014,11);local mr=(SM);local qr=(J(Zr,0X000,20)*M+Jr);if xr==eM then if qr==0x00000 then return tr*0;else local Am=1;do while Am<=0x1 do if Am~=0x0 then xr=1;Am=0X0;else mr=0;Am=2;end;end;end;end;elseif xr~=2047 then else do if qr==0x00000 then return tr*(eM/0);else return tr*(0X001/eM);end;end;end;return tr*(0X2^(xr-1023))*(qr/X+mr);end;cM=0x7;else J=function(H5,K5,O5)local v5,u5=(H5/T[K5])%T[O5],0x1;repeat do if u5==0x00000 then return v5;else v5=v5-v5%1;u5=0X0;end;end;until(false);end;do cM=1;end;end;end;end;end;until cM>0x00006;end;local x=H and H[AM]or function(mP,pP)local XP=2;local lP,zP=nil,nil;while'_l3\109`'do do if not(XP<=0x1)then do if XP~=2 then pP=pP%M;XP=1;else mP=mP%M;XP=0X0;end;end;else do if XP~=0 then zP=0;break;else lP=1;XP=0X3;end;end;end;end;end;while mP>0X0 and pP>0 do local wT,CT=nil,nil;for OF=0X00000,0X2 do if not(OF<=0)then if OF==0X1 then CT=pP%0X10;else zP=zP+m[wT][CT]*lP;end;else do wT=mP%0x10;end;end;end;local ZT=(1);repeat if ZT<=0 then pP=(pP-CT)/0X10;do ZT=2;end;else if ZT~=0x001 then lP=lP*16;do ZT=0x3;end;else mP=(mP-wT)/16;ZT=0X0;end;end;until ZT==3;end;return zP+mP*lP+pP*lP;end;local b=H and H.band or function(DU,UU)local wU=(1);do while true do if not(wU<=0X00000)then if wU~=1 then do UU=UU%M;end;wU=0X0;else DU=DU%M;wU=0X02;end;else do return((DU+UU)-x(DU,UU))/2;end;end;end;end;end;local g=H and H[mM]or function(Bo,Io)local so=(0X2);repeat if so<=0 then return y-b(y-Bo,y-Io);else if so~=1 then Bo=Bo%M;so=0X1;else Io=Io%M;so=0;end;end;until false;end;local C=H and H[HM]or function(Cd)return y-(Cd%M);end;cM=0X000;local j,P,Q,c,d,OM,vM,kM,aM,wM=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;repeat if not(cM<=0X00005)then if not(cM<=0X0008)then if not(cM<=9)then if cM~=0Xa then j=j or function(MD,LD)do for NL=0,1 do if NL~=0 then if not(LD<0)then else do return P(MD,-LD);end;end;elseif not(LD>=0x0020)then else return 0X0000;end;end;end;return(MD*T[LD])%M;end;cM=10;else P=P or function(S3,g3)local e3=(nil);local y3=(2);do repeat if not(y3<=1)then if y3~=0x2 then if g3<0x0 then return j(S3,-g3);end;y3=0;else if not(g3>=32)then else return 0X0;end;y3=3;end;else do if y3~=0X0000 then return e3-e3%1;else e3=(S3%M/T[g3]);y3=1;end;end;end;until(false);end;end;do cM=0X08;end;end;else kM=function(x7)local c7={h(z,p,p+3)};local a7=(x(c7[0X001],vM));local b7=(0X001);local V7,k7=nil,(nil);repeat if b7==0X0000 then k7=x(c7[0X3],vM);b7=0X0002;else V7=x(c7[2],vM);b7=0;end;until b7==2;local p7=(x(c7[4],vM));for HL=0x00000,2 do if not(HL<=0X000)then if HL==1 then do p=p+4;end;else return p7*0x1000000+k7*65536+V7*256+a7;end;else vM=(bM*vM+x7)%256;end;end;end;do cM=5;end;end;else do if not(cM<=6)then if cM==0x07 then vM=u();cM=9;else Q=function()local KY,nY=0X00000,(0X0);do while 0X37d8BBC3 do local RQ=h(z,p,p);p=p+0X00001;nY=g(nY,j(b(RQ,127),KY));if b(RQ,0x80)==0X0 then return nY;end;do KY=KY+0x7;end;end;end;end;cM=0x01;end;else P=H and H.rshift;cM=0XB;end;end;end;else do if not(cM<=2)then do if cM<=3 then OM=u();cM=0X7;else if cM==4 then d=function()local Wa=Q();if Wa>B then return Wa-M;end;return Wa;end;cM=0X003;else aM=function(...)do return k(gM,...),{...};end;end;cM=2;end;end;end;else if not(cM<=0X0)then do if cM~=0X1 then wM=SM;break;else c={[0X0005]=JM,[1]=0X0,[0X0]=9,[oM]=9,[3]=7,[6]=0X2,[JM]=0x0003,[sM]=SM};do cM=0x00004;end;end;end;else j=H and H[xM];do cM=0X6;end;end;end;end;end;until false;local lM=(function(Lz)local oz=(R());local Rz,iz='',(0X0);while iz<0X2 do if iz~=0 then p=p+oz;do iz=2;end;else for zL=0X00001,oz,7997 do local QL=0x000;local eL,hL=nil,nil;while QL~=0X5 do if not(QL<=0x001)then if not(QL<=0x2)then if QL==3 then hL={h(z,p+zL-SM,p+eL-SM)};QL=1;else if not(eL>oz)then else eL=oz;end;QL=3;end;else Rz=Rz..i(s(hL));do QL=5;end;end;else do if QL~=0 then for nh=1,#hL do local Uh=0X001;repeat do if Uh~=0X0 then(hL)[nh]=x(hL[nh],OM);do Uh=0X0000;end;else OM=(Lz*OM+247)%0X100;Uh=2;end;end;until Uh>0X1;end;QL=0X002;else eL=zL+7997-1;QL=0x004;end;end;end;end;end;iz=0X1;end;end;do return Rz;end;end);local G=(CM);do cM=0X3;end;local Y,FM,hM,iM=nil,nil,nil,nil;do repeat if cM<=1 then if cM~=0 then iM=hM();do cM=0x5;end;else function hM()local DP,HP,MP,IP,UP,kP=0X0006,nil,nil,nil,nil,nil;repeat if not(DP<=2)then if DP<=4 then do if DP~=3 then MP={nil,nil,nil,{},KM,KM,{},KM,{}};do DP=3;end;else MP[5]=Q();DP=2;end;end;else if DP~=0x5 then do DP=0X00005;end;else HP={};do DP=0X004;end;end;end;else if not(DP<=0x00)then if DP==1 then UP=R()-12338;DP=0x000;else IP=MP[0X4];do DP=1;end;end;else kP={};DP=7;end;end;until DP==7;DP=0X1;local lP=(nil);do repeat if DP~=0 then do lP=0X1;end;DP=0x0;else for r4=1,UP do IP[r4]={[7]=d(),[0X003]=u(),[SM]=u(),[4]=d(),[0X02]=u(),[0X0006]=d(),[0X5]=Q()};end;DP=0X002;end;until DP>=2;end;local FP=R()-31177;local NP=u();local LP={};local SP=u()~=0;for yi=SM,FP do local Ri,ni,Ni=0X03,nil,nil;while Ri<=0X0003 do do if not(Ri<=1)then do if Ri==0X2 then Ni=u();Ri=1;else ni=KM;do Ri=0X00002;end;end;end;else if Ri==0 then if Ni==0xf5 then ni=L();elseif Ni==139 then do ni=L();end;elseif Ni==49 then do ni=A();end;elseif Ni==208 then do ni=F(lM(NP),R());end;elseif Ni==0XC then ni=R();elseif Ni==0Xb4 then ni=F(lM(NP),u());elseif Ni==0X00dc then ni=F(lM(NP),6);elseif Ni==154 then ni=PM;elseif Ni==98 then ni=F(lM(NP),R());elseif Ni==0x7c then ni=A();else if Ni==92 then ni=F(lM(NP),R());else if Ni~=103 then else ni=rM;end;end;end;do Ri=0X0004;end;else(HP)[yi-0x1]=lP;do Ri=0X0;end;end;end;end;end;local ei={ni,{}};Ri=0x1;do while Ri<2 do if Ri~=0 then LP[lP]=ei;Ri=0;else lP=lP+1;Ri=0X00002;end;end;end;do if not(SP)then else do(YM)[wM]=ei;end;do wM=wM+SM;end;end;end;end;for Zw=1,UP do local Uw=nil;do for dG=0,0X1 do if dG==0 then Uw=MP[0X4][Zw];else for RI,jI in ipairs(r)do local TI=(nil);local yI=(c[jI]);for Pi=0x0,1 do if Pi~=0X00000 then if TI==0x0e then local bw=(HP[Uw[jI]]);local Sw=(LP[bw]);do if Sw then(Uw)[yI]=Sw[1];local N6=nil;for Vd=0X0,1 do if Vd==0 then N6=Sw[2];else do(N6)[#N6+0X001]={Uw,yI};end;end;end;end;end;else if TI==0X5 then(Uw)[jI]=Zw+Uw[jI]+0X1;end;end;else TI=Uw[yI];end;end;end;end;end;end;end;(MP)[0X12]=R();(MP)[0X3]=Q();local iP=nil;for mh=0,1 do if mh==0 then(MP)[0XE]=u();else iP=R()-92363;end;end;local zP,uP=nil,(nil);local vP=MP[0X7];for pd=0x0,10 do do if not(pd<=4)then if not(pd<=7)then if not(pd<=0X08)then if pd==0X9 then do MP[oM]=Q();end;else return MP;end;else for Jh=1,uP do local Uh=R();local uh=0X001;local Wh,yh=nil,(nil);do while uh~=3 do if not(uh<=0X0)then if uh==0X1 then do Wh=R();end;do uh=0;end;else for af=Uh,Wh do MP[BM][af]=yh;end;uh=0X3;end;else do yh=R();end;uh=2;end;end;end;end;end;else do if pd<=0X05 then(MP)[0x1]=J(zP,2,SM)~=0;else if pd~=6 then uP=R();else MP[16]=R();end;end;end;end;else do if not(pd<=1)then if not(pd<=2)then if pd~=0X03 then(MP)[6]=J(zP,0X001,1)~=0;else zP=u();end;else for VL=0x0001,Q()do do kP[VL]={u(),Q()};end;end;end;else do if pd==0 then for kd=0X000,iP-1 do do vP[kd]=hM();end;end;else do(MP)[uM]=kP;end;end;end;end;end;end;end;end;end;do cM=0X001;end;end;else do if cM<=0x2 then cM=4;elseif cM==3 then Y=jM;cM=0X2;else function FM(s9,J9,A9)local O9=J9[0X4];local U9=(J9[0x1]);local r9,W9=J9[0X9],J9[6];local S9,Q9,B9=J9[0X7],J9[0X0002],J9[0X3];local N9=(G({},{__mode="v"}));local b9,C9=J9[5],nil;C9=function(...)local Tt,qt=0x01,{};local mt=((o and o()or _ENV));local Lt={[0x1]=qt,[2]=J9};local et,xt=aM(...);do et=et-0x1;end;local Nt=((mt==t and s9 or mt));for ca=0,et do do if Q9>ca then(qt)[ca]=xt[ca+0X1];else do break;end;end;end;end;if not W9 then xt=nil;elseif not(U9)then else(qt)[Q9]={n=et>=Q9 and et-Q9+1 or 0X0,s(xt,Q9+1,et+0X1)};end;local Qt=(0X0);if Nt==mt then else if q then(q)(C9,Nt);else _ENV=Nt;end;end;local Yt,Ht,Mt,Jt=a(function()do while true do local us=(O9[Tt]);local es=(us[5]);do Tt=Tt+1;end;if not(es<46)then do if not(es>=69)then if es<0X39 then if not(es<51)then if not(es>=0X036)then if es<0X34 then(qt[us[0X4]])[qt[us[0x7]]]=qt[us[6]];else if es==53 then qt[us[4]]=true;else(qt)[us[0X4]]=g(qt[us[7]],qt[us[0X006]]);end;end;else if not(es<0x037)then if es==56 then qt[us[4]]=us[0X3];else if us[6]==92 then Tt=Tt-0x1;(O9)[Tt]={[7]=(us[7]-0X75),[0x0005]=0x0005b,[4]=(us[0X4]-0x75)};else repeat local ej,ij=N9,(qt);if not(#ej>0)then else local o6=({});for kI,tI in I,ej do do for TE,HE in I,tI do if HE[0X01]==ij and HE[2]>=0 then local Jr=(HE[0X002]);if not o6[Jr]then(o6)[Jr]={ij[Jr]};end;do HE[1]=o6[Jr];end;(HE)[2]=0X1;end;end;end;end;end;until true;local Rn=(us[4]);return false,Rn,Rn+us[7]-0X2;end;end;else(qt)[us[0X4]]=P(qt[us[0x7]],qt[us[6]]);end;end;else if not(es>=48)then do if es~=0X2F then(qt)[us[4]]=qt[us[7]]~=us[2];else do repeat local LV,kV=N9,qt;if not(#LV>0)then else local WG=({});for kE,JE in I,LV do for rT,BT in I,JE do do if BT[1]==kV and BT[2]>=0X0 then local Qh=(BT[0X2]);do if not WG[Qh]then(WG)[Qh]={kV[Qh]};end;end;BT[1]=WG[Qh];(BT)[0X2]=1;end;end;end;end;end;until true;end;return true,us[4],1;end;end;else do if es>=0X31 then if es~=0X000032 then local xL=us[4];local WL=(qt[xL+2]);local nL=(qt[xL]);local GL=(qt[xL+0X1]);(qt)[xL]=S(function()for Ra=nL,GL,WL do K(true,Ra);end;end);do Tt=us[0X00007];end;else if qt[us[0X7]]~=qt[us[6]]then do Tt=us[0X004];end;end;end;else local nY=us[7];local XY=us[0x0004];if nY==0 then else do Qt=XY+nY-1;end;end;local YY,sY,QY=nil,nil,us[6];do if nY~=1 then YY,sY=aM(qt[XY](s(qt,XY+0X1,Qt)));else YY,sY=aM(qt[XY]());end;end;do if QY==0X01 then Qt=XY-1;else if QY==0 then do YY=YY+XY-1;end;Qt=YY;else YY=XY+QY-0X00002;Qt=YY+1;end;local aa=0X0000;do for f9=XY,YY do aa=aa+0x001;do(qt)[f9]=sY[aa];end;end;end;end;end;end;end;end;end;else if not(es>=63)then if not(es<0X00003c)then if es>=61 then if es~=0X3e then local PK=(us[4]);local fK,JK=qt[PK]();if not(fK)then else qt[PK+0x1]=JK;Tt=us[0X0007];end;else local lm=us[0X4];local im,Km=qt[lm]();if not(im)then else Tt=us[0x7];(qt)[lm+3]=Km;end;end;else local AN,kN=S9[us[0X7]],nil;local gN=AN[8];local pN=(#gN);if not(pN>0X00)then else kN={};do for ug=0X0001,pN do local eg=(gN[ug]);if eg[0x1]==0X000 then(kN)[ug-1]={qt,eg[2]};else(kN)[ug-1]=A9[eg[2]];end;end;end;(E)(N9,kN);end;qt[us[4]]=FM(Nt,AN,kN);end;else if not(es<58)then if es~=59 then(qt)[us[4]]=qt[us[0x0007]]~=qt[us[0x06]];else do(qt)[us[0X4]]=qt[us[0X7]]%us[0X2];end;end;else do Tt=us[7];end;end;end;else if es>=0X000042 then if not(es>=67)then qt[us[4]]=x(qt[us[7]],qt[us[0X06]]);else if es==68 then local Er=us[4];Qt=Er+us[7]-0X1;qt[Er]=qt[Er](s(qt,Er+1,Qt));do Qt=Er;end;else repeat local mn,Un=N9,(qt);do if#mn>0 then local Wx={};for Y2,o2 in I,mn do for R7,n7 in I,o2 do if not(n7[0X01]==Un and n7[2]>=0X0)then else local YZ=n7[2];if not Wx[YZ]then(Wx)[YZ]={Un[YZ]};end;(n7)[1]=Wx[YZ];n7[0X00002]=0X001;end;end;end;end;end;until true;local iO=(us[0X4]);Qt=iO+1;return true,iO,2;end;end;else if es>=64 then if es==65 then local BL=us[4];for y0=BL,BL+(us[0X00007]-0X1)do do(qt)[y0]=xt[Q9+(y0-BL)+0X0001];end;end;else qt[us[0x004]]=qt[us[7]]<=qt[us[6]];end;else(qt)[us[4]]=qt[us[0X7]]>=qt[us[6]];end;end;end;end;else if es>=81 then if es<0X57 then if es<0X54 then if es<82 then do(qt)[us[0X00004]]=qt[us[7]]*qt[us[0x6]];end;else if es==83 then if qt[us[7]]<qt[us[6]]then do Tt=us[4];end;end;else if not(qt[us[0X7]]<=qt[us[0X006]])then else Tt=us[4];end;end;end;else if not(es<0X55)then if es~=86 then do if qt[us[0X7]]~=qt[us[6]]then else Tt=us[4];end;end;else if us[0x6]==0X0003d then Tt=Tt-0x01;(O9)[Tt]={[0x5]=0X13,[0X04]=(us[4]-0X007D),[0X007]=(us[0X7]-125)};else do repeat local QM,dM,Fg=N9,qt,us[4];do if#QM>0X0 then local fV={};for gT,iT in I,QM do for zC,BC in I,iT do do if not(BC[1]==dM and BC[2]>=Fg)then else local s1=BC[0x2];do if not(not fV[s1])then else fV[s1]={dM[s1]};end;end;(BC)[0X1]=fV[s1];(BC)[0X0002]=0X00001;end;end;end;end;end;end;until true;end;end;end;else qt[us[0x004]][us[0X3]]=us[0X002];end;end;else if not(es>=90)then if es<0X58 then(qt)[us[0X4]]=qt[us[7]]%qt[us[0X06]];else if es~=0X059 then do(qt)[us[0X4]]=qt[us[0X7]]>qt[us[6]];end;else do qt[us[0X4]]=j(qt[us[7]],qt[us[6]]);end;end;end;else if not(es>=0x5b)then qt[us[4]]=#qt[us[7]];else if es~=0X5c then qt[us[0x4]]=nil;else local MJ=(us[4]);qt[MJ](qt[MJ+1],qt[MJ+0x002]);do Qt=MJ-0X0001;end;end;end;end;end;else if not(es<0X4b)then if not(es>=78)then if es>=0X4c then if es~=0X04D then(UM)[us[0X00007]]=qt[us[4]];else local uk=us[4];qt[uk](s(qt,uk+1,Qt));Qt=uk-0X00001;end;else local UH=us[4];local XH=(S(function(...)K();for cu,yu,Au,vu,au,Eu,zu,Du,Hu,Zu in...do K(true,{cu,yu,Au,vu,au,Eu,zu,Du,Hu,Zu});end;end));XH(qt[UH],qt[UH+1],qt[UH+2]);do Qt=UH;end;do qt[UH]=XH;end;Tt=us[7];end;else if es<0X4F then(qt)[us[4]]={};else if es==0X0050 then Nt[us[3]]=qt[us[4]];else if not(not(qt[us[7]]<=qt[us[0X6]]))then else Tt=us[4];end;end;end;end;else if es>=72 then if not(es<0X49)then if es~=0X4A then if not(qt[us[0X7]]<=us[2])then Tt=us[4];end;else qt[us[0X4]]=qt[us[0x7]]-qt[us[6]];end;else Qt=us[4];(qt[Qt])();Qt=Qt-0X00001;end;else if es<70 then do(qt)[us[0X00004]]={s({},0X1,us[0X07])};end;else if es~=0X47 then local vh=us[4];local Vh,qh,ih=qt[vh]();do if Vh then(qt)[vh+0X0001]=qh;(qt)[vh+0X2]=ih;Tt=us[0X7];end;end;else do if not qt[us[0X00004]]then Tt=us[7];end;end;end;end;end;end;end;end;end;else do if es<23 then if es>=0X000b then do if not(es<0X000011)then if es<0X0014 then do if es<0X0012 then qt[us[0x4]]=qt[us[0X0007]]^qt[us[0X06]];else do if es==0X13 then if us[0X0006]==70 then do Tt=Tt-0X1;end;O9[Tt]={[0X0004]=(us[4]-0XB1),[0X00007]=(us[0X007]-177),[5]=0X5};else local kH,HH=us[0X4],et-Q9;if not(HH<0)then else HH=-1;end;for VJ=kH,kH+HH do(qt)[VJ]=xt[Q9+(VJ-kH)+1];end;do Qt=kH+HH;end;end;else(qt[us[4]])[qt[us[0X7]]]=us[0X00002];end;end;end;end;else if not(es<0X15)then if es~=22 then(qt)[us[4]]=qt[us[7]]/qt[us[0X6]];else(qt)[us[4]]=qt[us[0X00007]]==qt[us[0X6]];end;else if us[0X6]==0x0000ED then do Tt=Tt-1;end;O9[Tt]={[0X005]=0X5b,[7]=(us[7]-70),[0X4]=(us[0x4]-70)};elseif us[0X6]~=74 then do repeat local Wi,Gi=N9,(qt);do if#Wi>0X0000 then local Zu=({});do for A3,j3 in I,Wi do for KX,AX in I,j3 do if not(AX[1]==Gi and AX[2]>=0X0)then else local gQ=(AX[0x2]);if not Zu[gQ]then(Zu)[gQ]={Gi[gQ]};end;(AX)[1]=Zu[gQ];AX[0X2]=1;end;end;end;end;end;end;until true;end;return;else Tt=Tt-1;do O9[Tt]={[4]=(us[4]-0X79),[5]=55,[7]=(us[0X0007]-0x79)};end;end;end;end;else do if es<14 then if es>=12 then do if es~=0X0000d then if not(qt[us[0X4]])then else Tt=us[7];end;else local Xg,sg=us[4],((us[6]-1)*0X32);local Tg=(qt[Xg]);do for gq=0x1,Qt-Xg do Tg[sg+gq]=qt[Xg+gq];end;end;end;end;else repeat local Fc,Ec=N9,qt;if not(#Fc>0X000)then else local qx=({});for Jw,Mw in I,Fc do for u7,D7 in I,Mw do do if D7[0X1]==Ec and D7[2]>=0x00 then local vE=D7[0X2];if not qx[vE]then qx[vE]={Ec[vE]};end;(D7)[1]=qx[vE];(D7)[0X2]=1;end;end;end;end;end;until true;do return true,us[0X0004],0X0;end;end;else if not(es>=0X000F)then local FY=(us[4]);(qt)[FY]=qt[FY](qt[FY+0X1]);Qt=FY;else if es==16 then do if qt[us[0X7]]~=us[2]then else Tt=us[4];end;end;else(qt)[us[4]]=b(qt[us[7]],qt[us[0x6]]);end;end;end;end;end;end;else do if not(es<5)then if not(es>=0X8)then if not(es>=0x6)then if us[0X0006]==192 then do Tt=Tt-1;end;do O9[Tt]={[0x5]=20,[4]=(us[0X4]-0X3e),[7]=(us[0X7]-62)};end;else qt[us[4]]=qt[us[7]];end;else if es~=7 then local Sk,pk=us[0x4],qt[us[0X00007]];do(qt)[Sk+1]=pk;end;(qt)[Sk]=pk[us[0X2]];else qt[us[0X4]]=Lt[us[7]];end;end;else if not(es>=9)then local L5=(A9[us[0X0007]]);qt[us[4]]=L5[0x1][L5[2]];else if es~=0X0000a then if us[6]~=225 then(qt)[us[0X04]]=not qt[us[7]];else do Tt=Tt-1;end;do(O9)[Tt]={[0X4]=(us[4]-174),[5]=0X14,[0x0007]=(us[0x007]-174)};end;end;else local x5=(us[7]);local O5=qt[x5];do for qK=x5+0X00001,us[0X6]do O5=O5..qt[qK];end;end;qt[us[0x4]]=O5;end;end;end;else if es<2 then if es~=1 then(qt)[us[0X4]]=Nt[us[3]];else do qt[us[0X00004]]=false;end;end;else do if not(es>=3)then local qh=(qt[us[0x7]]/qt[us[6]]);(qt)[us[4]]=qh-qh%1;else if es==4 then(qt)[us[4]]=qt[us[0X0007]][us[2]];else local tN=us[4];(qt[tN])(qt[tN+1]);Qt=tN-0X00001;end;end;end;end;end;end;end;else if es<0X000022 then if not(es<0X1C)then do if es>=0X1f then if es<32 then local IB=(us[4]);local DB=(S(function(...)(K)();for Hd in...do(K)(true,Hd);end;end));(DB)(qt[IB],qt[IB+1],qt[IB+2]);Qt=IB;do(qt)[IB]=DB;end;Tt=us[7];else do if es==0x0021 then local md=us[0X0004];qt[md]=qt[md](qt[md+1],qt[md+0X002]);Qt=md;else(Lt)[us[0X0007]]=qt[us[4]];end;end;end;else if not(es<29)then do if es~=30 then qt[us[4]]=C(qt[us[7]]);else Qt=us[4];qt[Qt]=qt[Qt]();end;end;else local PC=(us[4]);local NC,yC=qt[PC]();if NC then for Xs=1,us[0X06]do qt[PC+Xs]=yC[Xs];end;do Tt=us[7];end;end;end;end;end;else if es<0x0019 then if es==0X18 then local FK=(us[4]);local gK=((us[6]-0X1)*0X0032);local MK=qt[FK];for Bb=0X0001,us[0X7]do do MK[gK+Bb]=qt[FK+Bb];end;end;else do qt[us[4]]=us[0X3];end;end;else do if not(es>=26)then local Vt=(A9[us[0x7]]);Vt[0x1][Vt[0X2]]=qt[us[4]];else if es==0x1B then local cd=(us[4]);do Qt=cd+us[0X7]-1;end;(qt[cd])(s(qt,cd+0X0001,Qt));Qt=cd-0X1;else qt[us[0X0004]]=UM[us[0X7]];end;end;end;end;end;else if es<40 then if not(es>=0X25)then if not(es>=35)then(qt)[us[0x4]]=qt[us[7]]<qt[us[6]];else do if es~=0X0024 then local zr=(us[4]);(qt)[zr]=qt[zr](s(qt,zr+0x1,Qt));Qt=zr;else if us[0x06]==19 then do Tt=Tt-0X1;end;(O9)[Tt]={[0X4]=(us[4]-20),[7]=(us[0X7]-0X14),[0X5]=20};elseif us[0x06]~=255 then for q7=us[4],us[0x7]do(qt)[q7]=nil;end;else Tt=Tt-1;do(O9)[Tt]={[0x5]=0X005,[0x7]=(us[7]-108),[4]=(us[4]-108)};end;end;end;end;end;else if es<38 then if us[0X0006]==108 then Tt=Tt-0X001;do(O9)[Tt]={[0X7]=(us[7]-234),[0X4]=(us[4]-234),[5]=0X13};end;else repeat local LA,VA=N9,(qt);do if#LA>0 then local HK=({});for YK,PK in I,LA do for NH,FH in I,PK do if not(FH[0X1]==VA and FH[0x2]>=0)then else local Wt=(FH[2]);if not(not HK[Wt])then else HK[Wt]={VA[Wt]};end;FH[1]=HK[Wt];(FH)[2]=0x1;end;end;end;end;end;until true;do return false,us[0X4],Qt;end;end;else if es==0x0027 then if us[6]==0X38 then Tt=Tt-1;do(O9)[Tt]={[4]=(us[4]-0X58),[5]=0X0005a,[7]=(us[7]-0X58)};end;elseif us[0X6]~=0X82 then qt[us[4]]=-qt[us[0X00007]];else do Tt=Tt-0X0001;end;do O9[Tt]={[4]=(us[0x04]-0x0040),[5]=91,[7]=(us[7]-0X40)};end;end;else do if not(qt[us[0X0007]]<qt[us[0x6]])then Tt=us[0x04];end;end;end;end;end;else if not(es>=43)then if not(es<0X029)then do if es~=0X002A then(qt)[us[0X004]]=qt[us[7]][qt[us[6]]];else(qt)[us[0X4]]=qt[us[0X7]]+qt[us[0X6]];end;end;else if qt[us[0X00007]]~=us[2]then Tt=us[0x4];end;end;else if es>=44 then if es==0X00002d then local dM=(us[4]);local QM=(S(function(...)K();do for V3,b3 in...do K(true,V3,b3);end;end;end));QM(qt[dM],qt[dM+0X1],qt[dM+2]);Qt=dM;qt[dM]=QM;Tt=us[0x7];else local QG=us[0X7];(qt)[us[4]]=qt[QG]..qt[QG+0x001];end;else do(qt[us[4]])[us[3]]=qt[us[0x6]];end;end;end;end;end;end;end;end;end;end;end);if Yt then if Ht then if Jt==0X00001 then return qt[Mt]();else return qt[Mt](s(qt,Mt+0X1,Qt));end;elseif not(Mt)then else return s(qt,Mt,Jt);end;else if Y(Ht)=="string"then do if not(D(Ht,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(D(Ht,"^.-:%d+: "))then U(Ht,0x0);else U("Luraph Script:"..(r9[Tt-0X0001]or"(internal)").."\058\032"..w(Ht),0x00);end;else U(Ht,0X00);end;end;end;if not(q)then else(q)(C9,s9);end;return C9;end;cM=0x0000;end;end;end;until cM==5;end;for yR=0,0X00002 do if not(yR<=0)then do if yR~=1 then do return FM(t,iM,nil)(...);end;else YM=KM;end;end;else UM[2]=YM;end;end;end)(0X07,string.rep,assert,"l\115hift",string,true,'\098n\111\116',3,"#",4,14,0X9,'\098or',false,11,setmetatable,setfenv,0X6,rawget,0X00000,_ENV,1,2,type,0X0C,nil,0X8,245,table,13,tonumber,0xA,15,unpack,coroutine,0x005,next,"\098xor",{0Xb47f,4098683051,0X03B984F40,0XFAA8b133,0X00007098b070,0x00E278AC02,0XF174DAC1,943360516,0X5A113Fd},...);
