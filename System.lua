-- This file was generated using Luraph Obfuscator v13.5.8

return(function(fr,Xr,Fr,Gr,Or,Kr,er,Wr,Sr,qr,pr,Lr,sr,tr,yr,zr,ar,Rr,Mr,Hr,Nr,vr,Ur,gr,Tr,Vr,cr,nr,Ir,dr,ir,Br,rr,Pr,hr,mr,J,...)local Q,ur,a=nil,nil,nil;for eT=0,2 do if not(eT<=0x0)then if eT~=0X1 then a=pr;else ur={};end;else Q=Ur;end;end;local wr={};local E=pcall;local f=yr;local D,A,I={4,5,0X7},nil,nil;local l,b=Nr,tonumber;for Pw=0x0,0x1 do if Pw==0x0 then A=tr;else I={[0]=0X00001};end;end;local Y,F=Sr.char,0x1;local o,U=nil,nil;do for iY=0x0000,1 do if iY==0 then o=string.gsub;else U=Hr;end;end;end;local e,y=nil,(nil);local Dr=(0);while Dr~=2 do if Dr~=0X00 then y=table.insert;Dr=2;else e=fr;do Dr=0X1;end;end;end;local t,H=rawget,next;Dr=0X0001;local X,k=nil,nil;while 0.6019389918755885 do do if Dr<=0 then k=Xr;break;else if Dr==0X1 then X=coroutine.yield;Dr=0X002;else Dr=0;end;end;end;end;local T=(a and a()or Kr);local L=(e-1);local K,h=unpack or table.unpackr=0X3;local r,z,m=nil,nil,(nil);repeat if Dr<=1 then do if Dr==0X000 then do z=function()local OT=A(h,F,F);F=F+0X1;return OT;end;end;Dr=0X1;else m=function()local wQ,RQ,uQ,OQ,IQ=1,nil,nil,nil,(nil);do while''do if wQ<=0X00 then return IQ*0X01000000+OQ*Tr+uQ*256+RQ;else do if wQ~=0X1 then F=F+0X4;wQ=0;else RQ,uQ,OQ,IQ=A(h,F,F+ar);wQ=0x02;end;end;end;end;end;end;do Dr=0X04;end;end;end;else do if Dr==2 then do h=o(k(h,5),"..",function(CG)if A(CG,0X002)==0X48 then r=b(k(CG,cr,1));return"";else local RP=(Y(b(CG,16)));do if r then local ZD,TD=0,nil;do repeat if not(ZD<=0)then if ZD==1 then return TD;else do r=nil;end;ZD=1;end;else TD=U(RP,r);ZD=2;end;until false;end;else return RP;end;end;end;end);end;do Dr=0X000;end;else do Dr=2;end;end;end;end;until Dr>3;local s,R,P,p=nil,nil,nil,nil;do for F9=0,0X3 do if F9<=0x1 then do if F9==0 then s=0X0000100000000;else do R={[0]={[0]=0X0,1,0x2,0X0003,0X4,0x5,6,0X0007,8,9,10,Fr,12,13,0X0e,15},{[0]=0X001,0X0000,0X3,0X2,5,0X4,0X07,0X6,hr,0X0008,0X0000b,0XA,13,12,15,0x000e},{[0X0]=0X2,0X3,0x0,0X1,0X0006,7,0x0004,5,0Xa,11,rr,0X9,0Xe,15,12,0XD},{[0X0]=3,0X2,1,0X00000,0X007,6,0X5,4,11,10,0X9,0X8,15,zr,13,12},{[0]=4,mr,0X6,7,er,1,2,0x3,0x0c,13,zr,15,8,9,10,11},{[0x0]=0X5,0X4,7,0X06,cr,0,0X3,0x00002,13,12,sr,14,9,8,0X0000b,0xa},{[er]=Or,0X7,0X4,5,Pr,0X03,0,cr,0xE,0X000F,12,Lr,nr,11,rr,0X09},{[er]=7,6,0X5,0X4,ar,2,0X001,0X0,15,0XE,13,12,11,0XA,0X9,8},{[0x00]=0X8,9,10,11,12,Lr,14,15,0X0,0X1,0X02,3,4,5,6,Ir},{[0]=9,0x00008,11,nr,0XD,ir,15,0X000E,1,0X0,0X3,2,mr,0X04,7,0X6},{[0X0]=nr,0Xb,8,0X9,14,15,12,0Xd,0X2,3,0X0000,1,6,7,0x4,0X5},{[0]=0XB,0XA,9,0X8,0xF,14,13,12,ar,2,1,0,0X7,Or,5,0X04},{[0]=12,0Xd,zr,sr,8,hr,10,0x00b,Mr,0X05,6,0X7,0,0X0001,0X2,0x03},{[0]=13,12,0Xf,0X0E,9,8,0X0000b,10,mr,0X4,0X7,0X6,1,0X0,3,0x2},{[0x0]=14,0XF,12,0X0000D,0XA,Fr,0X8,9,6,0x7,4,5,2,0x3,0,1},{[0X00]=0X00f,14,13,0xc,11,0Xa,0X9,0x8,7,0X6,mr,4,0x0003,0X2,0X1,0x0000}};end;end;end;else do if F9~=2 then p=string.match;else P=s-0X1;end;end;end;end;end;local S=rawset;do local e3=nil;local a3=0;repeat if a3~=0 then for eq=cr,0X001F do do(I)[eq]=e3;end;e3=e3*0X2;end;break;else e3=Pr;a3=0X1;end;until false;end;local M=function()local Pk,Kk=m(),(m());if Kk>=e then do Kk=Kk-s;end;end;return Kk*s+Pk;end;local O=(0X0002^0X000034);Dr=0;local i,q=nil,nil;repeat do if Dr~=0 then do q=function()local zl,rl=nil,nil;local pl=0;do while true do if pl==0 then zl=m();pl=0X1;else rl=m();break;end;end;end;do if not(zl==0 and rl==0X0)then else return 0;end;end;local sl=((-1)^i(rl,0x1F,0X1));local bl=i(rl,0X14,0X000B);local tl=(cr);local Fl=i(rl,0X0,0X14)*s+zl;do if bl==0 then do if Fl~=0 then local zg=(0X0);while zg<=0x1 do do if zg==0X0 then bl=0x0001;do zg=1;end;else do tl=0X0;end;zg=0X2;end;end;end;else return sl*0;end;end;elseif bl~=0x7ff then else if Fl~=0 then return sl*(0X001/0);else return sl*(er/0X00);end;end;end;do return sl*(0X2^(bl-1023))*(Fl/O+tl);end;end;end;do Dr=2;end;else i=function(xM,dM,PM)local CM=(nil);for LC=0,2 do if LC<=0X0 then CM=(xM/I[dM])%I[PM];else do if LC==0x1 then CM=CM-CM%1;else return CM;end;end;end;end;end;Dr=1;end;end;until Dr>0X1;local d=(bit or bit32);local g=d and d.bxor or function(NS,kS)local FS,uS,xS=5,nil,(nil);repeat if FS<=0X00002 then do if FS<=0 then while NS>0 and kS>er do local HZ,BZ,VZ=NS%16,kS%0X10,(3);do while VZ<=0x0003 do do if VZ<=1 then if VZ~=0X000 then NS=(NS-HZ)/16;VZ=0x0;else kS=(kS-BZ)/qr;VZ=0X002;end;else if VZ~=0x2 then uS=uS+R[HZ][BZ]*xS;VZ=1;else xS=xS*16;VZ=4;end;end;end;end;end;end;FS=0x2;else if FS~=0x01 then return uS+NS*xS+kS*xS;else xS=0X1;FS=0X0;end;end;end;elseif not(FS<=3)then if FS==4 then uS=0x0;FS=3;else NS=NS%s;FS=0X4;end;else do kS=kS%s;end;FS=1;end;until false;end;local v=(d and d.band or function(s2,p2)do s2=s2%s;end;local z2=(0X1);while 0.10042619595937208 do if z2~=0X0 then do p2=p2%s;end;do z2=0;end;else return((s2+p2)-g(s2,p2))/2;end;end;end);local W=(d and d.bor or function(FZ,XZ)FZ=FZ%s;XZ=XZ%s;return P-v(P-FZ,P-XZ);end);local V=(d and d.bnot or function(jr)return P-(jr%s);end);do Dr=0;end;local B,Z,G=nil,nil,nil;while Dr<=0x2 do if not(Dr<=0X0000)then if Dr~=0X1 then G=d and d.rshift;Dr=0X0003;else Z=Rr;do Dr=0x002;end;end;else do B=d and d.lshift;end;Dr=1;end;end;local N=setmetatable;B=B or function(gw,Pw)if not(Pw>=dr)then else return 0x0;end;if Pw<0 then do return G(gw,-Pw);end;end;return(gw*I[Pw])%s;end;G=G or function(y0,Z0)local C0=(nil);local t0=(2);repeat do if t0<=0X001 then if t0==0 then if not(Z0<0X00000)then else return B(y0,-Z0);end;do t0=3;end;else do return C0-C0%0X1;end;end;else do if t0~=0x0002 then C0=(y0%s/I[Z0]);t0=0x001;else if not(Z0>=32)then else return 0X0;end;t0=0X00000;end;end;end;end;until(false);end;Dr=1;local x,C=nil,nil;do while true do do if Dr~=0 then x=function()local NF,BF=0,(0X0);do repeat local Kt=(A(h,F,F));F=F+1;do BF=W(BF,B(v(Kt,0x7F),NF));end;if v(Kt,128)~=0 then else return BF;end;do NF=NF+0x007;end;until false;end;end;do Dr=0;end;else do C={[7]=3,[0X02]=0X6,[6]=1,[4]=cr,[0X5]=6,[0X0]=2,[0X1]=0X2,[1]=0X0003,[0X9]=0X2};end;do break;end;end;end;end;end;local w=(type);local Jr=(z());local Zr=z();local Qr=(function(fQ)local IQ=({A(h,F,F+3)});local jQ=0X00001;local pQ,CQ=nil,(nil);while jQ<=1 do if jQ==0 then do CQ=g(IQ[2],Zr);end;jQ=0X2;else pQ=g(IQ[0X1],Zr);do jQ=0;end;end;end;local xQ=(g(IQ[0X3],Zr));local VQ=(g(IQ[4],Zr));do Zr=(249*Zr+fQ)%256;end;for LO=0,1 do if LO~=0x0 then do return VQ*16777216+xQ*0X00010000+CQ*0x100+pQ;end;else do F=F+0X4;end;end;end;end);local c,u,Er=nil,nil,(nil);for WY=0,0X2 do do if WY<=0 then do c=gr;end;else do if WY~=1 then Er=function(...)return Q('\035',...),{...};end;else u=vr;end;end;end;end;end;Dr=9;local lr,br,j,kr,Ar,Yr=nil,nil,nil,nil,nil,(nil);repeat if Dr<=4 then do if not(Dr<=0x1)then do if not(Dr<=2)then if Dr==0X3 then wr=Vr;Dr=0x1;else j=function()local qH=(nil);do for By=0,2 do if not(By<=0x00000)then if By~=1 then return qH;else do if qH>L then return qH-s;end;end;end;else do qH=x();end;end;end;end;end;Dr=0x8;end;else function Ar()local A6,h6,V6,e6,W6,v6,g6,E6,p6=nil,nil,nil,nil,nil,nil,nil,nil,nil;for RU=0x0,0xF do do if RU<=7 then do if not(RU<=0X3)then do if not(RU<=5)then if RU==6 then do h6[1]=x();end;else h6[12]=z();end;else if RU==0x00004 then for C0=cr,V6 do local t0=m();local j0=(m());local Y0=(nil);for BS=0,0X0001 do if BS~=0 then for Mj=t0,j0 do(h6[0X00004])[Mj]=Y0;end;else Y0=m();end;end;end;else h6[13]=z();end;end;end;else do if not(RU<=0X1)then if RU==0X0002 then h6={Vr,nil,{},{},{},Vr,nil,nil,nil};else do V6=m();end;end;else if RU~=0 then A6={};else end;end;end;end;end;else if not(RU<=0Xb)then if RU<=13 then if RU==0Xc then v6=m()-0X2BDd;else g6={};end;else if RU==0Xe then do E6=z();end;else do p6=z()~=0;end;end;end;else do if not(RU<=0X09)then do if RU~=10 then do W6={};end;else h6[0X00012]=m();end;end;else if RU~=8 then do e6=1;end;else h6[10]=m();end;end;end;end;end;end;end;local b6,K6=0x2,(nil);while b6~=3 do do if b6<=0X00000 then do K6=m()-0X08d65;end;do b6=3;end;else if b6==0X1 then(h6)[6]=x();b6=0X000;else for eG=0x1,v6 do local dG=Vr;local OG,JG,sG=0X2,nil,(nil);while'g\104'do if OG<=0X2 then if OG<=0X0 then(g6)[e6]=sG;OG=4;else do if OG~=1 then JG=z();do OG=3;end;else if JG==148 then do dG=q()+m();end;elseif JG==72 then do dG=k(br(E6),z());end;elseif JG==0X52 then do dG=k(br(E6),0X3);end;elseif JG==0XfF then dG=q();elseif JG==0X85 then do dG=Br;end;elseif JG==0x89 then dG=M();elseif JG==0X000e0 then dG=k(br(E6),q()+m());elseif JG==0X00c2 then dG=k(br(E6),q()+m());elseif JG==dr then dG=false;end;OG=0x6;end;end;end;else if OG<=4 then if OG~=0X03 then e6=e6+1;OG=0X5;else A6[eG-1]=e6;OG=0X01;end;else if OG~=5 then sG={dG,{}};OG=0;else if p6 then local c8=1;while(true)do if c8==0 then do lr=lr+cr;end;do break;end;else do(wr)[lr]=sG;end;do c8=0;end;end;end;end;break;end;end;end;end;end;b6=1;end;end;end;end;local s6=(h6[0X5]);do for ed=er,K6-1 do s6[ed]=Ar();end;end;do b6=2;end;local I6=nil;while b6<=0x3 do if not(b6<=0x001)then if b6==0X002 then h6[9]=x();b6=0x0;else h6[13]=m();b6=1;end;elseif b6~=0X0 then I6=m()-14117;b6=4;else(h6)[0XD]=m();do b6=0X00003;end;end;end;local z6=h6[3];b6=4;while b6<5 do if b6<=1 then if b6~=0 then h6[0X7]=W6;b6=0X00003;else do h6[15]=z();end;do b6=5;end;end;else do if not(b6<=0X2)then if b6==3 then do for EJ=0X1,x()do(W6)[EJ]={z(),x()};end;end;b6=0;else do for xp=cr,I6 do(z6)[xp]={[4]=j(),[3]=z(),[5]=j(),[0x2]=x(),[0X006]=z(),[1]=z(),[0X7]=j()};end;end;b6=0X2;end;else for Ii=1,I6 do local Fi=(h6[3][Ii]);for ye,ve in Gr(D)do local ke,pe=nil,nil;for py=0X00,0x2 do if not(py<=0)then if py==1 then pe=Fi[ke];else if pe==11 then local Hs,ls,hs=0,nil,(nil);do while Hs<=1 do if Hs==0X0 then do ls=A6[Fi[ve]];end;Hs=0X001;else hs=g6[ls];Hs=0X2;end;end;end;if hs then local mF=(0X01);local yF=nil;repeat if mF~=0x0000 then Fi[ke]=hs[1];do mF=0X0;end;else yF=hs[0X2];mF=2;end;until mF==2;yF[#yF+0x1]={Fi,ke};end;else if pe~=zr then else Fi[ve]=Ii+Fi[ve]+0x00001;end;end;end;else do ke=C[ve];end;end;end;end;end;b6=0X1;end;end;end;end;local u6=z();do(h6)[0X8]=i(u6,1,1)~=0X000;end;do h6[0X00002]=i(u6,2,1)~=0;end;return h6;end;Dr=0X5;end;end;else do if Dr==0X0 then do ur[Pr]=wr;end;Dr=3;else return kr(Vr,Yr,T)(...);end;end;end;end;else if not(Dr<=0X00006)then if not(Dr<=7)then if Dr==0X008 then function kr(jM,lM,iM)local OM,CM,aM=lM[6],lM[0X00004],(lM[0X8]);local kM=lM[3];local WM,ZM=lM[0X5],(lM[9]);local yM=(lM[0X00002]);local hM=N({},{__mode="v"});local QM=lM[1];local VM=nil;VM=function(...)local fP,RP=0X0,({});local yP=(1);local YP=(a and a()or _ENV);local tP,pP=Er(...);local ZP=({[0X0001]=lM,[2]=RP});local eP=((YP==T and iM or YP));tP=tP-1;do for AD=0,tP do do if ZM>AD then do(RP)[AD]=pP[AD+0X1];end;else break;end;end;end;end;do if not aM then pP=nil;else if yM then(RP)[ZM]={n=tP>=ZM and tP-ZM+0x1 or 0,K(pP,ZM+0x1,tP+0X00001)};end;end;end;do if eP~=YP then if c then(c)(VM,eP);else _ENV=eP;end;end;end;local DP,OP,iP,WP=E(function()while-0x0002e26d916 do local YE=kM[yP];local KE=YE[2];do yP=yP+0x001;end;do if not(KE<0X00002d)then if not(KE>=0x44)then do if not(KE<0X38)then do if KE>=0X003e then do if not(KE>=0x41)then do if KE>=0X3F then if KE~=0X000040 then local Xp=YE[0X5];local pp=(f(function(...)(X)();do for yj in...do X(true,yj);end;end;end));(pp)(RP[Xp],RP[Xp+0x01],RP[Xp+0x2]);fP=Xp;RP[Xp]=pp;do yP=YE[4];end;else local ul=YE[0X0005];local jl,Vl,Ql=RP[ul],RP[ul+0X00001],RP[ul+2];RP[ul]=f(function()for QV=jl,Vl,Ql do X(true,QV);end;end);do yP=YE[0X4];end;end;else RP[YE[5]]=RP[YE[0X4]]<=RP[YE[0X007]];end;end;else if KE<0X42 then local bV=(YE[0X5]);local VV=(RP[bV]);local XV=((YE[0X7]-1)*0x32);for ql=1,fP-bV do do VV[XV+ql]=RP[bV+ql];end;end;else if KE==0X43 then do(RP)[YE[0x0005]]=nil;end;else local Be=YE[5];RP[Be](K(RP,Be+0x0001,fP));fP=Be-1;end;end;end;end;else if KE<0X3B then do if KE>=57 then do if KE~=58 then local tQ=YE[0X4];(RP)[YE[0X5]]=RP[tQ]..RP[tQ+0X1];else do(RP)[YE[5]]={};end;end;end;else local r1=YE[0x4];local o1=(RP[r1]);for pz=r1+0X1,YE[0X00007]do o1=o1..RP[pz];end;do RP[YE[5]]=o1;end;end;end;else if KE>=60 then if KE==61 then do RP[YE[0X005]]=v(RP[YE[4]],RP[YE[0X7]]);end;else local Ke=YE[5];local ae,je,he=RP[Ke]();if ae then RP[Ke+0X001]=je;(RP)[Ke+0X02]=he;yP=YE[4];end;end;else local zN=YE[0x5];(RP)[zN]=RP[zN](RP[zN+0X1]);fP=zN;end;end;end;end;else if not(KE<50)then do if KE<53 then if not(KE<0X33)then if KE==0X034 then(RP[YE[5]])[RP[YE[0X4]]]=RP[YE[0X0007]];else local Me=(YE[0X00005]);local Oe=(f(function(...)(X)();for hz,Oz in...do(X)(true,hz,Oz);end;end));Oe(RP[Me],RP[Me+1],RP[Me+2]);fP=Me;do(RP)[Me]=Oe;end;yP=YE[4];end;else(RP)[YE[0X5]]=ZP[YE[0X4]];end;else if KE>=0X036 then if KE==0X37 then(RP)[YE[5]]=RP[YE[0x004]]%RP[YE[7]];else RP[YE[5]]=false;end;else RP[YE[0X005]][RP[YE[0x4]]]=YE[0x3];end;end;end;else if KE>=0X2F then if not(KE<48)then do if KE~=0x031 then RP[YE[5]]=RP[YE[4]]>=RP[YE[7]];else if not(RP[YE[0X004]]<=RP[YE[7]])then yP=YE[0X5];end;end;end;else local cn=YE[5];local nn,En=RP[cn]();do if not(nn)then else yP=YE[4];do(RP)[cn+0X3]=En;end;end;end;end;else if KE==0X002e then do(RP)[YE[0X5]]={K({},1,YE[4])};end;else do if RP[YE[0x4]]~=RP[YE[0X7]]then else yP=YE[5];end;end;end;end;end;end;end;else if KE<79 then if not(KE>=73)then if not(KE<0x046)then if not(KE<0X47)then if KE~=72 then local CU=YE[5];fP=CU+YE[4]-1;(RP[CU])(K(RP,CU+1,fP));fP=CU-1;else if RP[YE[4]]<=RP[YE[0X7]]then yP=YE[5];end;end;else do RP[YE[0x5]]=RP[YE[4]][YE[3]];end;end;else if KE==69 then local Of=YE[0X5];(RP[Of])(RP[Of+0X0001]);fP=Of-1;else if not RP[YE[0X5]]then yP=YE[4];end;end;end;else if not(KE>=76)then if not(KE>=74)then do(RP)[YE[5]]=YE[1];end;else if KE==75 then do repeat local Cr,xr=hM,(RP);if#Cr>0 then local hI={};for us,os in H,Cr do for MY,NY in H,os do if NY[0x1]==xr and NY[0X2]>=0 then local J8=(NY[0x2]);if not hI[J8]then hI[J8]={xr[J8]};end;NY[1]=hI[J8];do NY[2]=0X01;end;end;end;end;end;until true;end;return false,YE[5],fP;else local K1=YE[0X5];local T1,l1=RP[K1]();if T1 then for pa=1,YE[7]do(RP)[K1+pa]=l1[pa];end;do yP=YE[4];end;end;end;end;else if KE>=77 then if KE==78 then if YE[0X07]==230 then yP=yP-0X1;(kM)[yP]={[2]=0X00D,[5]=(YE[5]-0X4D),[0x4]=(YE[4]-0X0004D)};elseif YE[0x7]~=0X000022 then repeat local wz,Dz=hM,(RP);if#wz>0 then local ib={};for Un,Dn in H,wz do do for Xw,Hw in H,Dn do if Hw[1]==Dz and Hw[0X002]>=0X0 then local wT=Hw[0X2];if not ib[wT]then ib[wT]={Dz[wT]};end;(Hw)[1]=ib[wT];(Hw)[2]=1;end;end;end;end;end;until true;local OU=(YE[0X0005]);do return false,OU,OU+YE[4]-2;end;else yP=yP-0X1;kM[yP]={[2]=0x00043,[5]=(YE[5]-0Xbf),[0x4]=(YE[4]-191)};end;else(ur)[YE[0x4]]=RP[YE[0X005]];end;else if RP[YE[0X04]]==YE[3]then else yP=YE[0X5];end;end;end;end;else if not(KE<85)then do if not(KE<0X58)then if KE<0x000059 then RP[YE[0X5]]=RP[YE[4]]^RP[YE[7]];else do if KE~=90 then local wv=jM[YE[0X4]];RP[YE[5]]=wv[0X1][wv[0X2]];else(RP)[YE[5]]=YE[1];end;end;end;else do if KE<0X56 then RP[YE[0X5]]=RP[YE[4]]>RP[YE[0x7]];else if KE~=87 then RP[YE[0X05]]=RP[YE[0X00004]]~=RP[YE[7]];else(RP)[YE[0x05]]=RP[YE[0X4]]==RP[YE[7]];end;end;end;end;end;else do if not(KE>=0X52)then if not(KE<0X50)then if KE==81 then do if RP[YE[4]]~=YE[3]then else yP=YE[5];end;end;else if YE[0x7]==12 then do yP=yP-0X1;end;kM[yP]={[0X5]=(YE[5]-133),[0x04]=(YE[4]-0X85),[0x2]=0X001e};elseif YE[7]==0x1f then yP=yP-1;do(kM)[yP]={[5]=(YE[5]-240),[0X4]=(YE[4]-0X00f0),[2]=13};end;else if RP[YE[0X005]]then yP=YE[4];end;end;end;else RP[YE[0X5]]=W(RP[YE[0X4]],RP[YE[0X7]]);end;else if KE>=0X53 then if KE~=0X054 then RP[YE[5]]=g(RP[YE[0X4]],RP[YE[7]]);else RP[YE[0X5]]=RP[YE[4]]%YE[0X003];end;else(RP)[YE[5]]=RP[YE[4]]+RP[YE[0X007]];end;end;end;end;end;end;else do if not(KE>=22)then if not(KE<11)then if not(KE<0X10)then if not(KE<19)then if not(KE<0X14)then if KE~=0X15 then local tS=(YE[5]);local FS=(RP[tS]);local ZS=((YE[0X7]-0X00001)*50);for jo=0X1,YE[4]do FS[ZS+jo]=RP[tS+jo];end;else RP[YE[0X00005]][YE[0X1]]=RP[YE[7]];end;else local OO=(YE[5]);do(RP)[OO]=RP[OO](K(RP,OO+0x00001,fP));end;do fP=OO;end;end;else if KE>=0x11 then do if KE~=18 then do(RP)[YE[5]]=RP[YE[0x04]][RP[YE[0X7]]];end;else if not(not(RP[YE[0x4]]<RP[YE[0x7]]))then else yP=YE[5];end;end;end;else local Lo=(YE[0X5]);local Yo,eo=RP[Lo]();if not(Yo)then else RP[Lo+0X0001]=eo;do yP=YE[0X04];end;end;end;end;else if KE>=13 then if not(KE<0Xe)then if KE==0X00f then(RP)[YE[5]]=eP[YE[1]];else local w0=YE[5];do(RP)[w0]=RP[w0](RP[w0+1],RP[w0+0X2]);end;fP=w0;end;else do if YE[0X007]==0X000b2 then yP=yP-0X00001;kM[yP]={[2]=0x2a,[0X4]=(YE[0X04]-0Xaa),[5]=(YE[0X5]-170)};else RP[YE[5]]=RP[YE[0x4]];end;end;end;else if KE~=0X00c then(RP)[YE[5]]=B(RP[YE[0x4]],RP[YE[0X7]]);else(RP)[YE[5]]=ur[YE[4]];end;end;end;else if not(KE<5)then if not(KE<8)then if not(KE<9)then if KE~=10 then fP=YE[0X5];RP[fP]();fP=fP-1;else RP[YE[0X00005]]=true;end;else eP[YE[1]]=RP[YE[5]];end;else do if not(KE>=0X0006)then do if YE[0X7]==135 then do yP=yP-1;end;do kM[yP]={[0X5]=(YE[0X0005]-0x06),[2]=27,[0X4]=(YE[0X04]-6)};end;else do repeat local Rl,Ul=hM,RP;if#Rl>0 then local CE=({});for ef,wf in H,Rl do for WX,DX in H,wf do if not(DX[0X1]==Ul and DX[0X002]>=0X00)then else local J7=DX[2];if not CE[J7]then(CE)[J7]={Ul[J7]};end;DX[0X1]=CE[J7];do(DX)[0X00002]=0X00001;end;end;end;end;end;until true;end;return;end;end;else do if KE~=0X07 then do repeat local YF,dF=hM,(RP);if#YF>0X0 then local WB=({});do for jK,eK in H,YF do do for fo,xo in H,eK do if not(xo[1]==dF and xo[0X2]>=0X0)then else local e3=xo[2];if not WB[e3]then WB[e3]={dF[e3]};end;do(xo)[0X1]=WB[e3];end;do(xo)[0X2]=1;end;end;end;end;end;end;end;until true;end;return true,YE[5],0x00001;else(RP)[YE[0X005]]=RP[YE[0X04]]<RP[YE[7]];end;end;end;end;end;else if not(KE>=0X2)then if KE~=0x01 then repeat local pu,Tu=hM,RP;do if not(#pu>0x0)then else local eK=({});for NA,mA in H,pu do for NI,II in H,mA do do if II[1]==Tu and II[0X0002]>=0 then local Iq=(II[0X2]);do if not eK[Iq]then(eK)[Iq]={Tu[Iq]};end;end;II[0x001]=eK[Iq];do II[2]=1;end;end;end;end;end;end;end;until true;return true,YE[5],0;else local b2=YE[0x5];RP[b2](RP[b2+1],RP[b2+2]);fP=b2-0x0001;end;else do if KE>=3 then if KE==0X4 then local a6=(jM[YE[0X4]]);a6[0X1][a6[0X2]]=RP[YE[0X5]];else if YE[0X7]~=51 then do(RP)[YE[0x5]]=not RP[YE[0X04]];end;else yP=yP-1;do kM[yP]={[0X4]=(YE[0X04]-41),[2]=0X4b,[0X5]=(YE[5]-41)};end;end;end;else repeat local Io,Ho,Vo=hM,RP,(YE[5]);do if#Io>0X0 then local TL={};for ix,Sx in H,Io do for lH,IH in H,Sx do if IH[1]==Ho and IH[0X2]>=Vo then local CP=IH[0x0002];do if not(not TL[CP])then else(TL)[CP]={Ho[CP]};end;end;IH[0x001]=TL[CP];do IH[2]=1;end;end;end;end;end;end;until true;end;end;end;end;end;else do if not(KE<33)then if KE<0X27 then do if not(KE<36)then if not(KE<0X0025)then if KE==38 then local pi,Xi=YE[0X005],(YE[0X04]);if Xi~=0X0 then do fP=pi+Xi-1;end;end;local Fi,ji=nil,nil;local oi=YE[0X7];if Xi==1 then do Fi,ji=Er(RP[pi]());end;else Fi,ji=Er(RP[pi](K(RP,pi+1,fP)));end;do if oi~=0X1 then if oi~=0X0 then Fi=pi+oi-2;do fP=Fi+1;end;else Fi=Fi+pi-0x0001;fP=Fi;end;local WY=(0X00);for nS=pi,Fi do WY=WY+0X0001;(RP)[nS]=ji[WY];end;else fP=pi-0X00001;end;end;else do RP[YE[0X5]]=G(RP[YE[4]],RP[YE[0X7]]);end;end;else RP[YE[5]]=RP[YE[4]]~=YE[3];end;else if KE>=34 then if KE~=35 then RP[YE[5]]=RP[YE[0X0004]]/RP[YE[0X007]];else(RP)[YE[0x005]]=RP[YE[0X4]]-RP[YE[7]];end;else for KY=YE[5],YE[0X4]do(RP)[KY]=nil;end;end;end;end;else if not(KE<0X2a)then if KE<0x2b then do if YE[7]==0X0000D then yP=yP-1;(kM)[yP]={[0x00002]=0X000043,[0x4]=(YE[0X04]-0X000Bd),[5]=(YE[0X00005]-189)};elseif YE[0x00007]==0X1 then yP=yP-1;do kM[yP]={[0X0004]=(YE[0X4]-0x00003d),[0X002]=13,[0X5]=(YE[0x0005]-61)};end;elseif YE[0X7]==0X000Ea then yP=yP-1;do kM[yP]={[5]=(YE[0X00005]-0XE0),[0x4]=(YE[4]-0X000E0),[2]=75};end;else RP[YE[0X005]]=-RP[YE[0X00004]];end;end;else if KE==44 then if not(RP[YE[4]]<RP[YE[7]])then else yP=YE[5];end;else if YE[7]==75 then yP=yP-0X1;kM[yP]={[4]=(YE[4]-202),[2]=0X043,[5]=(YE[5]-0xca)};else(RP)[YE[0X5]]=#RP[YE[4]];end;end;end;elseif not(KE>=40)then local oF=(YE[0x5]);local qF=YE[4];fP=oF+qF-0X0001;repeat local k0,q0=hM,(RP);if not(#k0>0X0)then else local My=({});do for Nq,Jq in H,k0 do for jr,Cr in H,Jq do if Cr[1]==q0 and Cr[0X2]>=0X0 then local AF=(Cr[0x0002]);do if not My[AF]then My[AF]={q0[AF]};end;end;do Cr[0X1]=My[AF];end;do(Cr)[0X2]=0X1;end;end;end;end;end;end;until true;return true,oF,qF;else if KE~=0X29 then if not(not(RP[YE[0x4]]<=YE[0x3]))then else do yP=YE[5];end;end;else fP=YE[0X05];(RP)[fP]=RP[fP]();end;end;end;else do if KE>=27 then do if not(KE>=0X0001E)then do if KE>=28 then do if KE==29 then ZP[YE[4]]=RP[YE[0X0005]];else do RP[YE[5]]=RP[YE[0X4]]*RP[YE[0X07]];end;end;end;else if YE[0X7]==0xD8 then do yP=yP-1;end;kM[yP]={[5]=(YE[5]-0X17),[0X0002]=0x2B,[0x4]=(YE[0x4]-0x000017)};else repeat local Nz,Vz=hM,RP;if#Nz>0x0 then local Ad=({});for KZ,bZ in H,Nz do do for RX,XX in H,bZ do if not(XX[0X1]==Vz and XX[0X00002]>=0x0)then else local lC=XX[2];if not(not Ad[lC])then else do(Ad)[lC]={Vz[lC]};end;end;XX[0X01]=Ad[lC];XX[2]=0X0001;end;end;end;end;end;until true;local p5=YE[5];return false,p5,p5;end;end;end;else do if KE<0x1F then local BX,eX=YE[5],tP-ZM;do if eX<0X0000 then eX=-1;end;end;for zt=BX,BX+eX do do RP[zt]=pP[ZM+(zt-BX)+0X1];end;end;do fP=BX+eX;end;else if KE~=32 then do if YE[7]==93 then do yP=yP-0X1;end;kM[yP]={[2]=30,[4]=(YE[0X004]-104),[0x005]=(YE[5]-104)};else local Wx=(YE[0X5]);for mx=Wx,Wx+(YE[0X04]-1)do(RP)[mx]=pP[ZM+(mx-Wx)+1];end;end;end;else do if RP[YE[4]]~=RP[YE[0X0007]]then yP=YE[5];end;end;end;end;end;end;end;elseif not(KE>=0X0018)then if KE==0X17 then do RP[YE[0X5]][YE[0x1]]=YE[3];end;else RP[YE[0x5]]=V(RP[YE[4]]);end;else if KE<25 then local Lj,gj=YE[5],RP[YE[4]];(RP)[Lj+0X1]=gj;do(RP)[Lj]=gj[YE[3]];end;else if KE==26 then yP=YE[4];else local ny=WM[YE[0X04]];local Wy=ny[0x00007];local Zy,ry=#Wy,nil;if Zy>0X0 then do ry={};end;for gv=1,Zy do local Dv=Wy[gv];if Dv[1]~=0 then ry[gv-1]=jM[Dv[2]];else ry[gv-0X001]={RP,Dv[2]};end;end;(y)(hM,ry);end;do RP[YE[5]]=kr(ry,ny,eP);end;end;end;end;end;end;end;end;end;end;end;end;end);if DP then do if OP then if WP~=1 then do return RP[iP](K(RP,iP+0x1,fP));end;else return RP[iP]();end;else if not(iP)then else return K(RP,iP,WP);end;end;end;else if w(OP)~='\115\116\114\105\110g'then u(OP,0X000);else do if p(OP,"\097tt\101m\112\116\032\116\111\032\121\105el\100 \097cr\111ss met\097\109\101t\104od/C\037-call\032b\111u\110\100ary")then return coroutine.yield();end;end;if not(p(OP,"^.-:%d+: "))then u(OP,0X0);else(u)("Luraph Script:"..(CM[yP-0X1]or"(internal)")..": "..l(OP),0);end;end;end;end;if not(c)then else c(VM,iM);end;return VM;end;Dr=2;else lr=1;Dr=7;end;else do Dr=0x6;end;end;else do if Dr==0X5 then Yr=Ar();Dr=0;else br=function(pK)local QK=0x2;local NK,KK=nil,(nil);while 0.17879736201300012 do if not(QK<=1)then do if QK==0x2 then NK=m();do QK=0x03;end;else KK="";QK=0X0;end;end;else if QK~=0 then do F=F+NK;end;do break;end;else for S0=1,NK,Wr do local N0,h0=nil,nil;local y0=(2);repeat do if not(y0<=1)then if not(y0<=2)then do if y0==3 then KK=KK..Y(K(h0));do y0=0X05;end;else if not(N0>NK)then else N0=NK;end;do y0=1;end;end;end;else do N0=S0+0X1f3d-1;end;do y0=0X4;end;end;elseif y0~=0 then do h0={A(h,F+S0-0X00001,F+N0-0X1)};end;y0=0;else for WE=1,#h0 do local hE=(1);while hE<=1 do if hE==0 then Jr=(pK*Jr+0X00073)%0x100;hE=0X2;else do h0[WE]=g(h0[WE],Jr);end;hE=0x0;end;end;end;y0=3;end;end;until y0>4;end;do QK=1;end;end;end;end;return KK;end;Dr=0X0004;end;end;end;end;until(false);end)(2147483648,string.sub,0Xb,ipairs,6,_ENV,0X0,7997,string,0X10,getfenv,13,0X000f,string.byte,coroutine.wrap,14,3,assert,4,string.rep,tostring,error,select,setfenv,0x10000,nil,1,0XA,0X7,0x20,12,true,8,0X2,9,0X5,{6480,745625597,300933303,0X00a4604258,3304396183,0X1fce5648,3267569638,18950379,0X3C0D49be},...);
